//
//  ModelCardMainVC.m
//  IDLook
//
//  Created by HYH on 2018/6/6.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "ModelCardMainVC.h"
#import "ModelCardSliderV.h"
#import "VideoPlayer.h"
#import "ModelCardMainCell.h"
#import "UploadModelCardVC.h"
#import "LookBigImageVC.h"
#import "TalentModel.h"

@interface ModelCardMainVC ()<ModelCardSliderVDelegate,UITableViewDelegate,UITableViewDataSource>
{
    NSIndexPath *_indexPath;
    VideoPlayer *_player;
    CGRect _currentPlayCellRect;
}
@property(nonatomic,strong)ModelCardSliderV *sliderView;
@property(nonatomic,strong)NSMutableArray *dataS;
@property(nonatomic,strong)UIButton *addBtn;
@property (nonatomic,assign)NSInteger currentIndex;
@property (nonatomic,strong)UIScrollView *scrollV;
@property (nonatomic,strong)UIButton *rightBtn;
@property(nonatomic,strong)UIView *bgV;
@end

@implementation ModelCardMainVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor=Public_Background_Color;
    [self.navigationItem setTitleView:[CustomNavVC setDefaultNavgationItemTitle:@"模特卡"]];
    [self.navigationItem setLeftBarButtonItem:[[UIBarButtonItem alloc] initWithCustomView:[CustomNavVC getLeftDefaultButtonWithTarget:self action:@selector(onGoback)]]];
    [self.navigationItem setRightBarButtonItem:[[UIBarButtonItem alloc]initWithCustomView:self.rightBtn]];

    self.dataS= [[NSMutableArray alloc]initWithCapacity:0];

    [self refreshData];
    
    [self sliderView];
    [self bgV];
    [self scrollV];
    [self addBtn];
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
 
}

-(void)onGoback
{
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)refreshData
{
    [self.dataS removeAllObjects];
     [SVProgressHUD showWithMaskType:SVProgressHUDMaskTypeClear];
    NSDictionary *dicArg=@{@"userid":[UserInfoManager getUserUID],
                           @"type":@"4"
                           };
    [AFWebAPI getWorksModelcardMirrorList:dicArg callBack:^(BOOL success, id object) {
        if (success) {
            [SVProgressHUD dismiss];
            NSDictionary *dic = [object objectForKey:JSON_data];
            
            NSArray *array = dic[@"modelcard"];
            for (int i =0 ; i<array.count; i++) {
                
                NSMutableArray *dataS = [NSMutableArray new];
                
                TalentModel *model1 = [[TalentModel alloc]initModelCardDic:array[i]];
                model1.isModelCard=1;
                TalentModel *model2 = [[TalentModel alloc]initModelCardDic:array[i]];

                [dataS addObject:model1];
                [dataS addObject:model2];
                
                [self.dataS addObject:@{@"name":model1.type,
                                        @"list":dataS}];
            }
            
            [self refreshUI];
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
}

//刷新ui
-(void)refreshUI
{
    if (self.dataS.count==0) {
        [self.navigationItem setRightBarButtonItem:nil];
        self.bgV.hidden=NO;
        self.addBtn.hidden=NO;
    }
    else
    {
        [self.navigationItem setRightBarButtonItem:[[UIBarButtonItem alloc]initWithCustomView:self.rightBtn]];
        self.bgV.hidden=YES;
    }
    
    NSMutableArray *arr = [[NSMutableArray alloc]initWithCapacity:0];
    for (int i = 0; i<self.dataS.count; i++) {
        NSDictionary *dic = self.dataS[i];
        [arr addObject:dic[@"name"]];
    }
    
    self.sliderView.typeViewArray = arr;

    for (UIView *view in self.scrollV.subviews) {
        [view removeFromSuperview];
    }
    
    self.scrollV.contentSize = CGSizeMake(UI_SCREEN_WIDTH*self.dataS.count,0);
    for (int i =0; i<self.dataS.count; i++) {
        CustomTableV *tableV = [[CustomTableV alloc] initWithFrame:CGRectMake(UI_SCREEN_WIDTH*i,0,UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT-SafeAreaTopHeight-60) style:UITableViewStylePlain];
        tableV.delegate = self;
        tableV.dataSource = self;
        tableV.tag=1000+i;
        tableV.bounces=YES;
        tableV.separatorStyle=UITableViewCellSeparatorStyleNone;
        tableV.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        [self.scrollV addSubview:tableV];
        tableV.estimatedRowHeight = 0;
        tableV.estimatedSectionHeaderHeight = 0;
        tableV.estimatedSectionFooterHeight = 0;
        tableV.backgroundColor=[UIColor clearColor];
    }
}

//上传模特卡
-(void)addModelcardAction
{
    UploadModelCardVC *uploadVC=[[UploadModelCardVC alloc]init];
    WeakSelf(self);
    uploadVC.saveRefreshUI = ^(NSArray *array) {
        
        [weakself.dataS removeAllObjects];
        for (int i =0 ; i<array.count; i++) {
            
            NSMutableArray *dataS = [NSMutableArray new];
            
            TalentModel *model1 = [[TalentModel alloc]initModelCardDic:array[i]];
            model1.isModelCard=1;
            TalentModel *model2 = [[TalentModel alloc]initModelCardDic:array[i]];
            
            [dataS addObject:model1];
            [dataS addObject:model2];
            
            [weakself.dataS addObject:@{@"name":model1.type,
                                    @"list":dataS}];
        }
        
        
        [weakself refreshUI];
        self.rightBtn.selected=NO;
    };
    [self.navigationController pushViewController:uploadVC  animated:YES];
}

//管理
-(void)managerAction:(UIButton*)sender
{
    sender.selected=!sender.selected;
    if (sender.selected) {
        self.sliderView.isEdit=YES;
        self.addBtn.hidden=YES;
    }
    else
    {
        self.sliderView.isEdit=NO;
        self.addBtn.hidden=NO;
    }
}

-(UIButton*)addBtn
{
    if (!_addBtn) {
        UIImage *image = [UIImage imageNamed:@"works_add_btn"];
        _addBtn=[UIButton buttonWithType:UIButtonTypeCustom];
        [_addBtn setBackgroundImage:image forState:UIControlStateNormal];
        [self.view addSubview:_addBtn];
        [_addBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.bottom.mas_equalTo(self.view);
            make.centerX.mas_equalTo(self.view);
        }];
        [_addBtn addTarget:self action:@selector(addModelcardAction) forControlEvents:UIControlEventTouchUpInside];
    }
    return _addBtn;
}

-(UIButton*)rightBtn
{
    if (!_rightBtn) {
        _rightBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        _rightBtn.frame = CGRectMake(0, 0, 48, 48);
        [_rightBtn setTitle:@"管理" forState:UIControlStateNormal];
        [_rightBtn setTitle:@"完成" forState:UIControlStateSelected];
        _rightBtn.titleLabel.font=[UIFont systemFontOfSize:15.0];
        [_rightBtn setTitleColor:Public_Text_Color forState:UIControlStateNormal];
        [_rightBtn addTarget:self action:@selector(managerAction:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _rightBtn;
}

-(ModelCardSliderV*)sliderView
{
    if (!_sliderView) {
        
        _sliderView =[[ModelCardSliderV alloc] initWithFrame:CGRectMake(0, 0, UI_SCREEN_WIDTH, 55)];
        _sliderView.delegate=self;
        [self.view addSubview:_sliderView];
        _sliderView.backgroundColor=[UIColor clearColor];
    }
    return _sliderView;
}


- (UIScrollView *)scrollV
{
    if(!_scrollV)
    {
        _scrollV = [[UIScrollView alloc] initWithFrame:CGRectMake(0,60, UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT-60)];
        _scrollV.pagingEnabled = YES;
        _scrollV.delegate = self;
        _scrollV.backgroundColor = [UIColor clearColor];
        _scrollV.showsHorizontalScrollIndicator = YES;
        _scrollV.showsVerticalScrollIndicator = YES;
        [self.view addSubview:_scrollV];
    }
    return _scrollV;
}


#pragma mark -
#pragma mark - UITableViewDataSource&&UITableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return .1f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return .1f;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    NSDictionary *dic = self.dataS[tableView.tag-1000];
    NSArray *list = dic[@"list"];
    return list.count;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row==0) {
        return (UI_SCREEN_WIDTH-30)/1.4+20;
    }
    return (UI_SCREEN_WIDTH-30)/1.78+20;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifer = @"UITableViewCell";
    ModelCardMainCell *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
    if(!cell)
    {
        cell = [[ModelCardMainCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.backgroundColor=[UIColor clearColor];
        if (indexPath.row==0) {
            UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(lookBigImage:)];
            [cell addGestureRecognizer:tap];
        }
        else if (indexPath.row==1) {
            UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(showVideoPlayer:)];
            [cell addGestureRecognizer:tap];
            cell.tag=indexPath.row+100;
        }
    }
    
    NSDictionary *dic = self.dataS[tableView.tag-1000];
    NSArray *list = dic[@"list"];
    [cell reloadUIWithModel:list[indexPath.row]];
    return cell;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
}


#pragma mark---ModelCardSliderVDelegate
-(void)clickTypeViewWithIndex:(NSInteger)index  //点击标签
{
    self.currentIndex = index;
    [self.scrollV setContentOffset:CGPointMake(UI_SCREEN_WIDTH*index, 0) animated:YES];
}

//删除
-(void)delectWithIndex:(NSInteger)index
{
    UIAlertController *alert=[UIAlertController alertControllerWithTitle:@"删除" message:@"确定要删除该模特卡吗？" preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *action0 = [UIAlertAction actionWithTitle:@"确认"
                                                      style:UIAlertActionStyleDestructive
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                        [self delectActionWithIndex:index];
                                                    }];
    UIAlertAction *action1 = [UIAlertAction actionWithTitle:@"取消"
                                                      style:UIAlertActionStyleCancel
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                    }];
    [alert addAction:action0];
    [alert addAction:action1];
    [self presentViewController:alert animated:YES completion:^{}];
}

-(void)delectActionWithIndex:(NSInteger)index
{
     [SVProgressHUD showWithMaskType:SVProgressHUDMaskTypeClear];
    
    NSDictionary *dic = self.dataS[index];
    NSArray *list = dic[@"list"];
    TalentModel *model = [list firstObject];
    
    NSDictionary *dicArg = @{@"userid":[UserInfoManager getUserUID],
                             @"creativeid":model.creativeid,
                             @"type":@(3)};
    
    [AFWebAPI setDelectWroks:dicArg callBack:^(BOOL success, id object) {
        if (success) {
            [SVProgressHUD showSuccessWithStatus:@"删除成功"];
            
            NSDictionary *dicA = [object objectForKey:JSON_data];
            NSArray *array = dicA[@"modelcard"];
            [self.dataS removeAllObjects];
            for (int i =0 ; i<array.count; i++) {
                
                NSMutableArray *dataS = [NSMutableArray new];
                TalentModel *model1 = [[TalentModel alloc]initModelCardDic:array[i]];
                model1.isModelCard=1;
                TalentModel *model2 = [[TalentModel alloc]initModelCardDic:array[i]];
                
                [dataS addObject:model1];
                [dataS addObject:model2];
                
                [self.dataS addObject:@{@"name":model1.type,
                                        @"list":dataS}];
            }
            
            [self refreshUI];
            self.sliderView.isEdit=YES;
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
}


-(void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
    if(scrollView.tag==0)
    {
        int curePage = (int) scrollView.contentOffset.x / UI_SCREEN_WIDTH;
        
        self.currentIndex = curePage;
        
        [self.sliderView moveSliderToPage:self.currentIndex];
        
        [_player destroyPlayer];
        _player = nil;
        
    }
}

- (void)showVideoPlayer:(UITapGestureRecognizer *)tapGesture {
    [_player destroyPlayer];
    _player = nil;
    
    UIView *view = tapGesture.view;
    
    CustomTableV *tableV = [self getCurrentTableViewWithTag:self.currentIndex];

    
    _indexPath = [NSIndexPath indexPathForRow:view.tag - 100 inSection:0];
    ModelCardMainCell *cell = [tableV cellForRowAtIndexPath:_indexPath];
    
    _player = [[VideoPlayer alloc] init];
    _player.layer.masksToBounds=YES;
    _player.layer.cornerRadius=5.0;
    
    NSDictionary *dic = self.dataS[self.currentIndex];
    NSArray *list = dic[@"list"];
    TalentModel *model = [list firstObject];
    
    _player.videoUrl =model.video;
    
    [_player playerBindTableView:tableV currentIndexPath:_indexPath];
    _player.frame = CGRectMake(15, 10, view.bounds.size.width-30, view.bounds.size.height-20);
    
    [cell.contentView addSubview:_player];
    
    _player.completedPlayingBlock = ^(VideoPlayer *player) {
        [player destroyPlayer];
        _player = nil;
    };
}


//查看模特卡图片
-(void)lookBigImage:(UITapGestureRecognizer*)tapGesture
{
    CustomTableV *tableV = [self getCurrentTableViewWithTag:self.currentIndex];
    ModelCardMainCell *cell = [tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0]];

    NSDictionary *dic = self.dataS[self.currentIndex];
    
    NSArray *list = dic[@"list"];
    TalentModel *model = [list firstObject];
    
    LookBigImageVC *lookImage=[[LookBigImageVC alloc]init];
    [lookImage showWithImageArray:@[model.imageurl] curImgIndex:0 AbsRect:cell.contentView.bounds];
    [self.navigationController pushViewController:lookImage animated:YES];
}

//根据tag等到tableView
-(CustomTableV*)getCurrentTableViewWithTag:(NSInteger)tag
{
    CustomTableV *tableV=[self.scrollV viewWithTag:1000+tag];
    
    return tableV;
}

#pragma mark--无数据时背景图
-(UIView*)bgV
{
    if (!_bgV) {
        _bgV=[[UIView alloc]init];
        [self.view addSubview:_bgV];
        [_bgV mas_makeConstraints:^(MASConstraintMaker *make) {
            make.edges.mas_equalTo(self.view).insets(UIEdgeInsetsZero);
        }];

        UIImageView *imageView=[[UIImageView alloc]init];
        [_bgV addSubview:imageView];
        [imageView mas_makeConstraints:^(MASConstraintMaker *make) {
            make.centerX.mas_equalTo(_bgV);
            make.bottom.mas_equalTo(_bgV.mas_centerY).offset(-50);
        }];
        imageView.image=[UIImage imageNamed:@"nodata_works"];

        UILabel *desc=[[UILabel alloc]init];
        [_bgV addSubview:desc];
        desc.font=[UIFont systemFontOfSize:14.0];
        desc.textColor=[UIColor colorWithHexString:@"#999999"];
        [desc mas_makeConstraints:^(MASConstraintMaker *make) {
            make.centerX.mas_equalTo(self.view);
            make.top.mas_equalTo(imageView.mas_bottom).offset(15);
        }];
        desc.text=@"暂无模特卡";
        _bgV.hidden=YES;
    }
    return _bgV;
}

@end
