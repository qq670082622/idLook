//
//  CenterMainVC.m
//  IDLook
//
//  Created by HYH on 2018/3/7.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "CenterMainVC.h"
#import "CenterOrderView.h"
#import "CenterMainCell.h"
#import "PersonalInfoVC.h"
#import "MyWorksVC.h"
#import "UserCenterVC.h"
#import "AssetsMainVC.h"
#import "PriceMainVC.h"
#import "AuthUploadBasicVC.h"
#import "MyCertificateVC.h"
#import "SettingMainVC.h"
#import "MyOrderMainVC.h"
#import "MyAuthStateVC.h"
#import "MyAuthSuccessVC.h"
#import "ModelCardMainVC.h"
#import "SystemMsgVC.h"
#import "AssetsPurVC.h"
#import "PublicWebVC.h"
#import "AuthResourcerVC.h"
#import "PerformTypeVC.h"
#import "PastworksVC.h"
#import "IdentityAuthVC.h"
#import "SharePopV.h"
#import "ShareManager.h"
#import "ContactVC.h"

@interface CenterMainVC ()<UITableViewDelegate,UITableViewDataSource>
@property (nonatomic,strong)UIImageView *bg;
@property (nonatomic,strong)UIImageView *head;
@property (nonatomic,strong)UILabel *nick;
@property (nonatomic,strong)UILabel *countLab;
@property (nonatomic,strong)UILabel *headState;
@property (nonatomic,strong)UIImageView *bottomV;
@property(nonatomic,strong)CustomTableV *tableV;


@end

@implementation CenterMainVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor=Public_Background_Color;

    [self.navigationController setNavigationBarHidden:YES];
    
    [self tableV];
    
    [self initUI];

}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
//    //设置导航栏背景图片为一个空的image，这样就透明了
//    [self.navigationController.navigationBar setBackgroundImage:[UIImage imageWithColor:[[UIColor whiteColor]colorWithAlphaComponent:(self.tableV.contentOffset.y / SafeAreaTopHeight)>0.99?0.99:(self.tableV.contentOffset.y /SafeAreaTopHeight)]] forBarMetrics:UIBarMetricsDefault];
//    //去掉透明后导航栏下边的黑边
//    [self.navigationController.navigationBar setShadowImage:[[UIImage alloc] init]];
    
    [self.navigationController setNavigationBarHidden:YES];

}

-(void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
//    //    如果不想让其他页面的导航栏变为透明 需要重置
//    [self.navigationController.navigationBar setBackgroundImage:[UIImage imageWithColor:[UIColor whiteColor]] forBarMetrics:UIBarMetricsDefault];
//    [self.navigationController.navigationBar setShadowImage:[[UIImage alloc] init]];
    [self.navigationController setNavigationBarHidden:NO];

}

//设置
-(void)setting
{
    SettingMainVC *settingVC=[[SettingMainVC alloc]init];
    settingVC.hidesBottomBarWhenPushed=YES;
    [self.navigationController pushViewController:settingVC animated:YES];
}

//系统消息
-(void)message
{
    SystemMsgVC *msgVC=[[SystemMsgVC alloc]init];
    msgVC.hidesBottomBarWhenPushed=YES;
    WeakSelf(self);
    msgVC.refreshUIBlock = ^{
        [weakself refreshUI];
    };
    [self.navigationController pushViewController:msgVC animated:YES];
}

//刷新ui
-(void)refreshUI
{
    NSString *headUrl;
    if ([UserInfoManager getUserHeadstatus]==1) {
        headUrl = [UserInfoManager getUserMiniaudit];
        self.headState.hidden=NO;
    }
    else
    {
        headUrl = [UserInfoManager getUserHead];
        self.headState.hidden=YES;
    }
    
    [self.head sd_setImageWithUrlStr:headUrl placeholderImage:[UIImage imageNamed:@"head_default"]];
    
    if ([UserInfoManager getUnreadCount]==0) {
        self.countLab.hidden=YES;
    }
    else
    {
        self.countLab.hidden=NO;
        self.countLab.text=[NSString stringWithFormat:@"%ld",[UserInfoManager getUnreadCount]];
    }
    
    if ([UserInfoManager getUserType]==UserTypeResourcer) {
        self.nick.text=[UserInfoManager getUserNick];
    }
    else
    {
        if ([UserInfoManager getUserSubType]==UserSubTypePurPersonal) {
            self.nick.text=[UserInfoManager getUserBuyerName];
        }
        else
        {
            self.nick.text=[UserInfoManager getUserCompanyName];
        }
    }
    [self.tableV reloadData];
}

-(CustomTableV*)tableV
{
    if (!_tableV) {
        _tableV = [[CustomTableV alloc] initWithFrame:CGRectMake(0,-UI_STATUS_BAR_HEIGHT,UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT+SafeAreaTopHeight) style:UITableViewStyleGrouped];
        _tableV.delegate = self;
        _tableV.dataSource = self;
        _tableV.separatorStyle=UITableViewCellSeparatorStyleNone;
        _tableV.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        _tableV.showsVerticalScrollIndicator=NO;
        _tableV.showsHorizontalScrollIndicator=NO;
        [self.view addSubview:_tableV];
        _tableV.estimatedRowHeight = 0;
        _tableV.estimatedSectionHeaderHeight = 0;
        _tableV.estimatedSectionFooterHeight = 0;
        _tableV.backgroundColor=Public_Background_Color;
        _tableV.tableHeaderView = [self tableHeadV];
        [_tableV addHeaderWithTarget:self action:@selector(pullDownToRefresh:)];
    }
    return _tableV;
}

-(UIView*)tableHeadV
{
    UIView *bg = [[UIView alloc]initWithFrame:CGRectMake(0,0, UI_SCREEN_WIDTH, 307)];

    UIImageView *imageV = [[UIImageView alloc]initWithFrame:CGRectMake(0,0, UI_SCREEN_WIDTH, 214)];
    imageV.image=[UIImage imageNamed:@"center_head_bg"];
    imageV.contentMode=UIViewContentModeScaleAspectFill;
    [bg addSubview:imageV];
    self.bg=imageV;
    
    CenterOrderView *orderView = [[CenterOrderView alloc]initWithFrame:CGRectMake(8,170,UI_SCREEN_WIDTH-16,138)];
    [bg addSubview:orderView];
    orderView.backgroundColor=[UIColor whiteColor];
    orderView.layer.cornerRadius=5.0;
    orderView.layer.shadowOffset = CGSizeMake(5, 5);
    orderView.layer.shadowOpacity = 0.8;
    orderView.layer.shadowColor = [[UIColor colorWithHexString:@"#BAA6A6"] colorWithAlphaComponent:1.0].CGColor;
    [orderView layoutIfNeeded];
    WeakSelf(self);
    orderView.orderClickTypeBlock = ^(NSInteger type) {
        MyOrderMainVC *order = [[MyOrderMainVC alloc]init];
        order.currIndex=type;
        order.hidesBottomBarWhenPushed=YES;
        [weakself.navigationController pushViewController:order animated:YES];
    };
    

    UIImageView *headV = [[UIImageView alloc]init];
    headV.userInteractionEnabled=YES;
    headV.layer.masksToBounds=YES;
    headV.layer.cornerRadius=33;
    headV.clipsToBounds=YES;
    headV.backgroundColor=[UIColor grayColor];
    headV.contentMode=UIViewContentModeScaleAspectFill;
    [bg addSubview:headV];
    [headV mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.mas_equalTo(bg);
        make.top.mas_equalTo(bg).offset(35);
        make.size.mas_equalTo(CGSizeMake(66, 66));
    }];

    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(clickHead)];
    [headV addGestureRecognizer:tap];
    self.head=headV;
    
    UILabel *headState= [[UILabel alloc]init];
    headState.font=[UIFont systemFontOfSize:12.0];
    headState.textColor=[UIColor whiteColor];
    headState.text=@"审核中";
    headState.textAlignment=NSTextAlignmentCenter;
    headState.backgroundColor=[[UIColor colorWithHexString:@"#000000"] colorWithAlphaComponent:0.6];
    [headV addSubview:headState];
    [headState mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.mas_equalTo(headV);
        make.bottom.mas_equalTo(headV.mas_bottom);
        make.left.mas_equalTo(headV);
        make.height.mas_equalTo(25);
    }];
    self.headState=headState;
    
    UILabel *nameLab= [[UILabel alloc]init];
    nameLab.font=[UIFont systemFontOfSize:17.0];
    nameLab.textColor=[UIColor colorWithHexString:@"#FFFFFF"];
    [bg addSubview:nameLab];
    [nameLab mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.mas_equalTo(bg);
        make.top.mas_equalTo(headV.mas_bottom).offset(15);
    }];
    self.nick=nameLab;
    
    UILabel *useridLab= [[UILabel alloc]init];
    useridLab.font=[UIFont systemFontOfSize:12.0];
    useridLab.textColor=[[UIColor colorWithHexString:@"#FFFFFF"] colorWithAlphaComponent:0.8];
    useridLab.text= [NSString stringWithFormat:@"脸探肖像ID：%@",[UserInfoManager getUserUID]];
    [bg addSubview:useridLab];
    [useridLab mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.mas_equalTo(bg);
        make.top.mas_equalTo(nameLab.mas_bottom).offset(6);
    }];
    
    [self refreshUI];
    
    return bg;
}

-(void)pullDownToRefresh:(id)sender
{
    
    NSDictionary *dicArg = @{@"userid":[UserInfoManager getUserUID],
                             @"usertype":@([UserInfoManager getUserType])};
    
    [AFWebAPI getCenterNewDataWithArg:dicArg callBack:^(BOOL success, id object) {
        if (success) {
            
            NSDictionary *dic = [object objectForKey:JSON_data];
            UserInfoM *uinfo = [[UserInfoM alloc] initWithDic:dic];
            
            [UserInfoManager setUserLoginfo:uinfo];
            [UserInfoManager setUserLoginType:UserLoginTypeMobile];

            [self refreshUI];
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
        [self.tableV headerEndRefreshing];
    }];
}

-(void)initUI
{
    UIButton *messageBtn=[UIButton buttonWithType:UIButtonTypeCustom];
    [self.view addSubview:messageBtn];
    [messageBtn setImage:[UIImage imageNamed:@"center_message"] forState:UIControlStateNormal];
    [messageBtn mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.mas_equalTo(self.view).offset(33);
        make.right.mas_equalTo(self.view).offset(-10);
        make.size.mas_equalTo(CGSizeMake(35, 35));
    }];
    [messageBtn addTarget:self action:@selector(message) forControlEvents:UIControlEventTouchUpInside];
    
    UIButton *settingBtn=[UIButton buttonWithType:UIButtonTypeCustom];
    [self.view addSubview:settingBtn];
    [settingBtn setImage:[UIImage imageNamed:@"center_setting"] forState:UIControlStateNormal];
    [settingBtn mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.mas_equalTo(self.view).offset(33);
        make.right.mas_equalTo(messageBtn.mas_left).offset(0);
        make.size.mas_equalTo(CGSizeMake(35, 35));
    }];
    [settingBtn addTarget:self action:@selector(setting) forControlEvents:UIControlEventTouchUpInside];
    
    UILabel *countLab= [[UILabel alloc]init];
    countLab.font=[UIFont systemFontOfSize:8.0];
    countLab.backgroundColor=[UIColor whiteColor];
    countLab.layer.masksToBounds=YES;
    countLab.layer.cornerRadius=6.0;
    countLab.textAlignment=NSTextAlignmentCenter;
    countLab.textColor=Public_Red_Color;
    countLab.text=[NSString stringWithFormat:@"%ld",[UserInfoManager getUnreadCount]];
    [self.view addSubview:countLab];
    [countLab mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.mas_equalTo(messageBtn.mas_right).offset(-5);
        make.top.mas_equalTo(messageBtn.mas_top).offset(5);
        make.size.mas_equalTo(CGSizeMake(12, 12));
    }];
    self.countLab=countLab;
    if ([UserInfoManager getUnreadCount]==0) {
        self.countLab.hidden=YES;
    }
    
    UIImageView *bottmV= [[UIImageView alloc]init];
    bottmV.image=[UIImage imageNamed:@"center_bottom"];
    [self.view addSubview:bottmV];
    bottmV.hidden=YES;
    bottmV.userInteractionEnabled=YES;
    [bottmV mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.mas_equalTo(self.view);
        make.bottom.mas_equalTo(self.view).offset(20);
    }];
    self.bottomV=bottmV;
    
    UIImageView *icon1= [[UIImageView alloc]init];
    icon1.image=[UIImage imageNamed:@"center_prompt_01"];
    [bottmV addSubview:icon1];
    [icon1 mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.mas_equalTo(bottmV).offset(27);
        make.left.mas_equalTo(bottmV).offset(30);
    }];
    
    UILabel *lab= [[UILabel alloc]init];
    lab.font=[UIFont systemFontOfSize:14];
    lab.textColor=[UIColor whiteColor];
    lab.text=@"您还没有实名认证，赶快去认证吧。";
    [bottmV addSubview:lab];
    [lab mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerY.mas_equalTo(icon1);
        make.left.mas_equalTo(icon1.mas_right).offset(6);
    }];
    
    UIButton *closeBtn=[UIButton buttonWithType:UIButtonTypeCustom];
    [bottmV addSubview:closeBtn];
    [closeBtn setImage:[UIImage imageNamed:@"center_close"] forState:UIControlStateNormal];
    [closeBtn mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerY.mas_equalTo(icon1);
        make.right.mas_equalTo(bottmV).offset(-30);
    }];
    [closeBtn addTarget:self action:@selector(closeBottom) forControlEvents:UIControlEventTouchUpInside];
    
    if ([UserInfoManager getUserType]==UserTypeResourcer && [UserInfoManager getUserAuthState]==0) {
        if ([UserInfoManager getAuthBottom]==YES) {
            self.bottomV.hidden=NO;
        }
    }
}

-(void)closeBottom
{
    self.bottomV.hidden=YES;
    [UserInfoManager setAuthBottomShow:NO];
}

#pragma mark -
#pragma mark - UITableViewDataSource&&UITableViewDelegate

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return .1f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 20.f;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 1;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if ([UserInfoManager getUserType]==UserTypePurchaser) {
        return 180;
    }
    return 270;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifer = @"CenterMainCell";
    CenterMainCell *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
    if(!cell)
    {
        cell = [[CenterMainCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.backgroundColor=[UIColor whiteColor];
    }
    __weak __typeof(self)ws=self;
    cell.CenterMainCellBlock = ^(NSInteger type) {
        [ws clcikWithType:type];
    };
    return cell;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}

-(void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    [self jugeAlpha];
    float offsetY = self.tableV.contentOffset.y;
    CGFloat offsetH = -SafeAreaTopHeight- offsetY;
    
    if (offsetH < 0) return;
    
}

//table偏移
-(void)jugeAlpha
{
    float offsetY = self.tableV.contentOffset.y;
    if (offsetY<=(-UI_STATUS_BAR_HEIGHT))
    {
        self.bg.frame=CGRectMake(0,offsetY+UI_STATUS_BAR_HEIGHT,UI_SCREEN_WIDTH,214-UI_STATUS_BAR_HEIGHT-offsetY);
    }
    else
    {
//        [self.navigationController.navigationBar setBackgroundImage:[UIImage imageWithColor:[UIColor whiteColor]] forBarMetrics:UIBarMetricsDefault];
    }
}

-(void)clickHead
{
    PersonalInfoVC *VC=[[PersonalInfoVC alloc]init];
    VC.hidesBottomBarWhenPushed=YES;
    WeakSelf(self);
    VC.EditInfosBlock = ^{
        [weakself refreshUI];
    };
    [self.navigationController pushViewController:VC animated:YES];
}

-(void)clcikWithType:(NSInteger)type
{
    //未认证成功，跳到认证界面
//    if ([UserInfoManager getUserAuthState]!=1) {
//        if (type!=CenterMainTypeAuth) {
//            if (type==CenterMainTypeContact || type==CenterMainTypeStrategy) {
//       
//            }
//            else
//            {
//                [self goAuth];
//                return;
//            }
//        }
//    }
    
    //个人中心
    if (type==CenterMainTypePersonal) {
        UserCenterVC *VC=[[UserCenterVC alloc]init];
        VC.hidesBottomBarWhenPushed=YES;
        WeakSelf(self);
        VC.saveRefreshUI = ^{
            [weakself refreshUI];
        };
        [self.navigationController pushViewController:VC animated:YES];
    }
    //我的作品
    else if (type==CenterMainTypeWorks)
    {
        MyWorksVC *workVC=[[MyWorksVC alloc]init];
        workVC.hidesBottomBarWhenPushed=YES;
        [self.navigationController pushViewController:workVC animated:YES];
    }
    
    //分类表演
    else if (type==CenterMainTypePerformance)
    {
        PerformTypeVC *VC=[[PerformTypeVC alloc]init];
        VC.hidesBottomBarWhenPushed=YES;
        [self.navigationController pushViewController:VC animated:YES];
    }
    
    //过往作品
    else if (type==CenterMainTypePastwork)
    {
        PastworksVC *VC=[[PastworksVC alloc]init];
        VC.hidesBottomBarWhenPushed=YES;
        [self.navigationController pushViewController:VC animated:YES];
    }
    
    //资产管理
    else if (type==CenterMainTypeAssets)
    {
        if ([UserInfoManager getUserType]==UserTypePurchaser) {
            AssetsPurVC *VC=[[AssetsPurVC alloc]init];
            VC.hidesBottomBarWhenPushed=YES;
            [self.navigationController pushViewController:VC animated:YES];
        }
        else
        {
            AssetsMainVC *VC=[[AssetsMainVC alloc]init];
            VC.hidesBottomBarWhenPushed=YES;
            [self.navigationController pushViewController:VC animated:YES];
        }
    }
    
    //报价管理
    else if (type==CenterMainTypePrice)
    {
        PriceMainVC *VC=[[PriceMainVC alloc]init];
        VC.hidesBottomBarWhenPushed=YES;
        [self.navigationController pushViewController:VC animated:YES];
    }
    
    //我的认证
    else if (type==CenterMainTypeAuth)
    {
        [self authAction];
    }
    
    //我的授权书
    else if (type==CenterMainTypeCertificate)
    {
        MyCertificateVC *VC=[[MyCertificateVC alloc]init];
        VC.hidesBottomBarWhenPushed=YES;
        [self.navigationController pushViewController:VC animated:YES];
    }
    
    //联系脸探肖像
    else if (type==CenterMainTypeContact)
    {
        ContactVC *contactVC = [[ContactVC alloc] init];
        contactVC.hidesBottomBarWhenPushed=YES;
        [self.navigationController pushViewController:contactVC animated:YES];
    }
    
    //模特卡
    else if (type==CenterMainTypeModelCard)
    {
        ModelCardMainVC *modelcardVC=[[ModelCardMainVC alloc]init];
        modelcardVC.hidesBottomBarWhenPushed=YES;
        [self.navigationController pushViewController:modelcardVC animated:YES];
    }
    //脸探攻略
    else if (type==CenterMainTypeStrategy)
    {
        NSString *url = @"";
        if ([UserInfoManager getUserType]==UserTypePurchaser) {
            url=@"http://www.idlook.com/public/purchaser-help/html/index.html";
        }
        else if ([UserInfoManager getUserType]==UserTypeResourcer)
        {
            url=@"http://www.idlook.com/public/performer-help/html/index.html";
        }
        PublicWebVC * webVC = [[PublicWebVC alloc] initWithTitle:@"脸探攻略" url:url];
        webVC.hidesBottomBarWhenPushed=YES;
        [self.navigationController pushViewController:webVC animated:YES];
    }
    //分享脸探
    else if (type==CenterMainTypeShare)
    {
        SharePopV *pop=[[SharePopV alloc]init];
        WeakSelf(self);
        pop.shareBlock=^(NSInteger tag)
        {
            [ShareManager shareAppWithType:tag withViewControll:weakself];
        };
        
        [pop showBottomShare];
    }
}

//去认证
-(void)goAuth
{
    UIAlertController *alert=[UIAlertController alertControllerWithTitle:@"去认证" message:@"您的身份还未进行认证，去认证吗？" preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *action0 = [UIAlertAction actionWithTitle:@"去认证"
                                                      style:UIAlertActionStyleDestructive
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                        [self authAction];
                                                    }];
    UIAlertAction *action1 = [UIAlertAction actionWithTitle:@"取消"
                                                      style:UIAlertActionStyleCancel
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                    }];
    [alert addAction:action0];
    [alert addAction:action1];
    [self presentViewController:alert animated:YES completion:^{}];
}

-(void)authAction
{
    if ([UserInfoManager getUserAuthState]==0) {
        
        if ([UserInfoManager getUserType]==UserTypeResourcer) {
            IdentityAuthVC *authVC=[[IdentityAuthVC alloc]init];
            authVC.hidesBottomBarWhenPushed=YES;
            [self.navigationController pushViewController:authVC animated:YES];
        }
        else
        {
            AuthUploadBasicVC *authVC=[[AuthUploadBasicVC alloc]init];
            authVC.hidesBottomBarWhenPushed=YES;
            [self.navigationController pushViewController:authVC animated:YES];
        }
    }
    else if ([UserInfoManager getUserAuthState]==2 || [UserInfoManager getUserAuthState]==3)
    {
        MyAuthStateVC *stateVC=[[MyAuthStateVC alloc]init];
        stateVC.authState=[UserInfoManager getUserAuthState];
        stateVC.hidesBottomBarWhenPushed=YES;
        [self.navigationController pushViewController:stateVC animated:YES];
    }
    else if ([UserInfoManager getUserAuthState]==1)
    {
        MyAuthSuccessVC *successVC=[[MyAuthSuccessVC alloc]init];
        successVC.hidesBottomBarWhenPushed=YES;
        [self.navigationController pushViewController:successVC animated:YES];
    }
}

@end
