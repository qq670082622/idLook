//
//  CenterMainCell.m
//  IDLook
//
//  Created by HYH on 2018/5/8.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "CenterMainCell.h"

@interface CenterMainCell ()

@end

@implementation CenterMainCell

-(void)layoutIfNeeded
{
    [super layoutIfNeeded];
    
    for (UIView *view in self.contentView.subviews) {
        [view removeFromSuperview];
    }
    
    NSArray *array;
    if ([UserInfoManager getUserType]==UserTypePurchaser) {
        array = @[@{@"title":@"实名认证",@"image":@"center_auth",@"prompt":@"去认证",@"type":@(CenterMainTypeAuth)},
                  @{@"title":@"资产管理",@"image":@"center_assets",@"prompt":@"",@"type":@(CenterMainTypeAssets)},
                  @{@"title":@"联系脸探肖像",@"image":@"center_contact",@"prompt":@"",@"type":@(CenterMainTypeContact)},
                  @{@"title":@"分享脸探",@"image":@"center_share",@"prompt":@"",@"type":@(CenterMainTypeShare)},

//                  @{@"title":@"脸探攻略",@"image":@"center_Strategy",@"prompt":@"",@"type":@(CenterMainTypeStrategy)}
                  ];
    }
    else if ([UserInfoManager getUserType]==UserTypeResourcer)
    {
        array = @[@{@"title":@"个人中心",@"image":@"center_user",@"prompt":@"去完善",@"type":@(CenterMainTypePersonal)},
                  @{@"title":@"分类表演",@"image":@"center_typePreform",@"prompt":@"去上传",@"type":@(CenterMainTypePerformance)},
                  @{@"title":@"过往作品",@"image":@"center_pastwork",@"prompt":@"去上传",@"type":@(CenterMainTypePastwork)},
                  @{@"title":@"实名认证",@"image":@"center_auth",@"prompt":@"去认证",@"type":@(CenterMainTypeAuth)},
                  @{@"title":@"资产管理",@"image":@"center_assets",@"prompt":@"",@"type":@(CenterMainTypeAssets)},
                  @{@"title":@"报价管理",@"image":@"center_price",@"prompt":@"填报价",@"type":@(CenterMainTypePrice)},
                  @{@"title":@"分享脸探",@"image":@"center_share",@"prompt":@"",@"type":@(CenterMainTypeShare)}
//                  @{@"title":@"我的授权书",@"image":@"center_certificate",@"type":@(CenterMainTypeCertificate)}
//                  @{@"title":@"脸探攻略",@"image":@"center_Strategy",@"prompt":@"",@"type":@(CenterMainTypeStrategy)}
                  ];
    }

    for (int i=0; i<array.count; i++) {
        NSDictionary *dic = array[i];
        NSInteger type = [dic[@"type"]integerValue];
        
        CenterSubCell *cell = [[CenterSubCell alloc]init];
        cell.userInteractionEnabled=YES;
        [self.contentView addSubview:cell];
        cell.tag=100+type;
        [cell mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.mas_equalTo(self.contentView).offset(i%3*(UI_SCREEN_WIDTH/3));
            make.top.mas_equalTo(self.contentView).offset(i/3*90);
            make.size.mas_equalTo(CGSizeMake(UI_SCREEN_WIDTH/3, 90));
        }];
        [cell reloadUIWithDic:dic];
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(buttionClick:)];
        [cell addGestureRecognizer:tap];
    }
    
    UIView *lineV=[[UIView alloc]init];
    lineV.backgroundColor=Public_LineGray_Color;
    [self.contentView addSubview:lineV];
    [lineV mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(self.contentView);
        make.top.mas_equalTo(self.contentView).offset(90);
        make.size.mas_equalTo(CGSizeMake(UI_SCREEN_WIDTH, 0.5));
    }];
    
    UIView *lineV1=[[UIView alloc]init];
    lineV1.backgroundColor=Public_LineGray_Color;
    [self.contentView addSubview:lineV1];
    [lineV1 mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(self.contentView);
        make.top.mas_equalTo(self.contentView).offset(180);
        make.size.mas_equalTo(CGSizeMake(UI_SCREEN_WIDTH, 0.5));
    }];
    
    UIView *lineV2=[[UIView alloc]initWithFrame:CGRectMake(UI_SCREEN_WIDTH/3, 0, 0.5, 180)];
    lineV2.backgroundColor=Public_LineGray_Color;
    [self.contentView addSubview:lineV2];
    [lineV2 mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(self.contentView).offset(UI_SCREEN_WIDTH/3);
        make.top.mas_equalTo(self.contentView);
        make.size.mas_equalTo(CGSizeMake(0.5, self.contentView.bounds.size.height));
    }];
    
    UIView *lineV3=[[UIView alloc]init];
    lineV3.backgroundColor=Public_LineGray_Color;
    [self.contentView addSubview:lineV3];
    [lineV3 mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.mas_equalTo(self.contentView).offset(-UI_SCREEN_WIDTH/3);
        make.top.mas_equalTo(self.contentView);
        make.size.mas_equalTo(CGSizeMake(0.5, self.contentView.bounds.size.height));
    }];
}

-(void)buttionClick:(UITapGestureRecognizer*)tap
{
    self.CenterMainCellBlock(tap.view.tag-100);
}

@end

@interface CenterSubCell ()
@property(nonatomic,strong)UIImageView *icon;
@property(nonatomic,strong)UILabel *name;
@property(nonatomic,strong)UIButton *promtBtn;
@end

@implementation CenterSubCell
-(UIImageView*)icon
{
    if (!_icon) {
        _icon=[[UIImageView alloc]init];
        [self addSubview:_icon];
        _icon.contentMode=UIViewContentModeScaleAspectFill;
        [_icon mas_makeConstraints:^(MASConstraintMaker *make) {
            make.centerX.mas_equalTo(self);
            make.centerY.mas_equalTo(self).offset(-8);
        }];
        
    }
    return _icon;
}

-(UILabel*)name
{
    if (!_name) {
        _name=[[UILabel alloc]init];
        _name.font=[UIFont systemFontOfSize:13.0];
        _name.textColor=Public_Text_Color;
        [self addSubview:_name];
        [_name mas_makeConstraints:^(MASConstraintMaker *make) {
            make.centerX.mas_equalTo(self);
            make.top.mas_equalTo(self.icon.mas_bottom).offset(10);
        }];
    }
    return _name;
}

-(UIButton*)promtBtn
{
    if (!_promtBtn) {
        _promtBtn=[UIButton buttonWithType:UIButtonTypeCustom];
        [self addSubview:_promtBtn];
        [_promtBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        _promtBtn.titleLabel.font=[UIFont systemFontOfSize:9.0];
        [_promtBtn setBackgroundImage:[UIImage imageNamed:@"center_prompt"] forState:UIControlStateNormal];
        [_promtBtn setBackgroundImage:[UIImage imageNamed:@"center_prompt"] forState:UIControlStateHighlighted];
        [_promtBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.mas_equalTo(self.mas_centerX);
            make.top.mas_equalTo(self).offset(8);
        }];
        _promtBtn.titleEdgeInsets=UIEdgeInsetsMake(-1.5,0,1.5, 0);
    }
    return _promtBtn;
}

-(void)reloadUIWithDic:(NSDictionary*)dic
{
    self.icon.image=[UIImage imageNamed:dic[@"image"]];
    self.name.text=dic[@"title"];
    
    
    CenterMainType type = [dic[@"type"] integerValue];

    if (type==CenterMainTypeAuth) {
        if ([UserInfoManager getUserAuthState]==0 || [UserInfoManager getUserAuthState]==2) { //未审核，审核不通过
            [self.promtBtn setTitle:dic[@"prompt"] forState:UIControlStateNormal];
            self.promtBtn.hidden=NO;
        }
        else if ([UserInfoManager getUserAuthState]==3) //审核中
        {
            [self.promtBtn setTitle:@"审核中" forState:UIControlStateNormal];
            self.promtBtn.hidden=NO;
        }
        else
        {
            self.promtBtn.hidden=YES;
        }
    }
    else
    {
        if (type==CenterMainTypePersonal) {
            if ([UserInfoManager getUserCompletInfoWithType:0]==0) {
                [self.promtBtn setTitle:dic[@"prompt"] forState:UIControlStateNormal];
                self.promtBtn.hidden=NO;
            }
            else
            {
                self.promtBtn.hidden=YES;
            }
        }
        else if (type==CenterMainTypePerformance)
        {
            if ([UserInfoManager getUserCompletInfoWithType:1]==0&&[UserInfoManager getUserCompletInfoWithType:2]==0) {
                [self.promtBtn setTitle:dic[@"prompt"] forState:UIControlStateNormal];
                self.promtBtn.hidden=NO;
            }
            else
            {
                self.promtBtn.hidden=YES;
            }
        }
        else if (type==CenterMainTypePastwork)
        {
            if ([UserInfoManager getUserCompletInfoWithType:5]==0&&[UserInfoManager getUserCompletInfoWithType:6]==0) {
                [self.promtBtn setTitle:dic[@"prompt"] forState:UIControlStateNormal];
                self.promtBtn.hidden=NO;
            }
            else
            {
                self.promtBtn.hidden=YES;
            }
        }
        else if (type==CenterMainTypePrice)
        {
            if ([UserInfoManager getUserCompletInfoWithType:8]==0) {
                [self.promtBtn setTitle:dic[@"prompt"] forState:UIControlStateNormal];
                self.promtBtn.hidden=NO;
            }
            else
            {
                self.promtBtn.hidden=YES;
            }
        }
        else
        {
            self.promtBtn.hidden=YES;
        }
    }

}

@end
