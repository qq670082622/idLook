//
//  AssetsMainVC.m
//  IDLook
//
//  Created by HYH on 2018/5/14.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "AssetsMainVC.h"
#import "AssetsTopV.h"
#import "AssetsMainHeadV.h"
#import "AssetsSelectV.h"
#import "AssetsMainCell.h"
#import "AssetsSelectPopV.h"
#import "ForwardVC.h"
#import "AssetsSelectPopV.h"
#import "AssetModel.h"

@interface AssetsMainVC ()<UITableViewDelegate,UITableViewDataSource>
@property(nonatomic,strong)CustomTableV *tableV;
@property (nonatomic,strong)AssetsTopV *topV;
@property (nonatomic,strong)AssetsSelectV *selectV;
@property (nonatomic,strong)AssetsSelectPopV *popV;
@property(nonatomic,strong) NSMutableArray *dataSource;
@property(nonatomic,assign)CGFloat totalMoney;
@property(nonatomic,strong)NSString *startdate;  //按日期查询的开始时间
@property(nonatomic,assign)NSInteger assetsType;  //资产类型
@end

@implementation AssetsMainVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor=Public_Background_Color;
    [self.navigationItem setTitleView:[CustomNavVC setWhiteNavgationItemTitle:@"资产管理"]];
    [self.navigationItem setLeftBarButtonItem:[[UIBarButtonItem alloc] initWithCustomView:[CustomNavVC getLeftDefaultWhiteButtonWithTarget:self action:@selector(onGoback)]]];
    
    self.dataSource=[[NSMutableArray alloc]initWithCapacity:0];
    self.startdate=[PublicManager getTimeWithNowDateWithDay:-90];
    self.assetsType=0;
    
    [self getData];
    [self tableV];
    
    [self selectV];
    
}

-(void)onGoback
{
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    //设置导航栏背景图片为一个空的image，这样就透明了
    [self.navigationController.navigationBar setBackgroundImage:[UIImage imageWithColor:[[UIColor whiteColor]colorWithAlphaComponent:(self.tableV.contentOffset.y / SafeAreaTopHeight)>0.99?0.99:(self.tableV.contentOffset.y /SafeAreaTopHeight)]] forBarMetrics:UIBarMetricsDefault];
    //去掉透明后导航栏下边的黑边
    [self.navigationController.navigationBar setShadowImage:[[UIImage alloc] init]];

}

-(void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    //    如果不想让其他页面的导航栏变为透明 需要重置
    [self.navigationController.navigationBar setBackgroundImage:[UIImage imageWithColor:[UIColor whiteColor]] forBarMetrics:UIBarMetricsDefault];
    [self.navigationController.navigationBar setShadowImage:[[UIImage alloc] init]];

}

-(void)getData
{
    NSDictionary *dic =@{@"userid":[UserInfoManager getUserUID],
                         @"ordertype":@(self.assetsType),
                         @"startdate":self.startdate,
                         @"enddate":[PublicManager string1FromDate:[NSDate date]],
                         @"sortkey":@(0),
                         @"pagenumber":@(10000)};
    
    [AFWebAPI setCapitalDetailsWithArg:dic callBack:^(BOOL success, id object) {
        if (success) {
            NSDictionary *dic= [object objectForKey:JSON_data];
            NSArray *array1 = (NSArray*)safeObjectForKey(dic, @"transaction");
            NSMutableArray *arr = [NSMutableArray new];
            for (int i=0; i<array1.count; i++) {
                AssetModel *model= [[AssetModel alloc]initWithDic:array1[i]];
                [arr addObject:model];
            }
            
            if (self.assetsType==0 || self.assetsType==100) {
                NSArray *array2 = (NSArray*)safeObjectForKey(dic, @"withdraw");
                for (int i=0; i<array2.count; i++) {
                    AssetModel *model= [[AssetModel alloc]initDrawDic:array2[i]];
                    [arr addObject:model];
                }
            }


            CGFloat total = [(NSNumber*)safeObjectForKey(dic, @"total") floatValue];
            CGFloat drawPrice = [(NSNumber*)safeObjectForKey(dic, @"drawPrice") floatValue];

            [self.topV refreshTotalAssets:[NSString stringWithFormat:@"%.2f",total-drawPrice]];
            self.totalMoney=total-drawPrice;
            
            [self.dataSource removeAllObjects];
            if (arr.count) {
                [self getSameArrayList:[self dateSortWithArray:arr]];
            }
            
            [self.tableV hideNoDataScene];
            if (self.dataSource.count==0) {
                [self.tableV showWithNoDataType:NoDataTypeAssets];
            }
            [self.tableV reloadData];
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
}

-(CustomTableV*)tableV
{
    if (!_tableV) {
        _tableV = [[CustomTableV alloc] initWithFrame:CGRectMake(0,0,UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT) style:UITableViewStyleGrouped];
        _tableV.delegate = self;
        _tableV.dataSource = self;
        _tableV.showsVerticalScrollIndicator=NO;
        _tableV.showsHorizontalScrollIndicator=NO;
        _tableV.separatorStyle=UITableViewCellSeparatorStyleNone;
        _tableV.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        [self.view addSubview:_tableV];
        
        _tableV.estimatedRowHeight = 0;
        _tableV.estimatedSectionHeaderHeight = 0;
        _tableV.estimatedSectionFooterHeight = 0;
        _tableV.backgroundColor=Public_Background_Color;
        _tableV.tableHeaderView=[self tableHeadV];

    }
    return _tableV;
}

-(AssetsSelectV*)selectV
{
    if (!_selectV) {
        _selectV=[[AssetsSelectV alloc]initWithFrame:CGRectMake(0,160+SafeAreaTopHeight,UI_SCREEN_WIDTH, 50)];
        [self.view addSubview:_selectV];
        WeakSelf(self);
        WeakSelf(_selectV);
        _selectV.AssetsSelectVClick = ^(NSInteger tag, BOOL isSelect) {
            if (isSelect) {
                weakself.popV.frame=CGRectMake(0,weakself.selectV.frame.origin.y+50, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT-weakself.selectV.frame.origin.y-50);
                [weakself.popV showPopViewWithType:tag withSelect:[weak_selectV getSelectButtonTitle:tag]];
            }
            else
            {
                [weakself.popV hide];
            }
        };
    }
    return _selectV;
}

-(AssetsSelectPopV*)popV
{
    if (!_popV) {
        _popV=[[AssetsSelectPopV alloc]initWithFrame:CGRectMake(0, 0, 0, 0)];
        [self.view addSubview:_popV];
        _popV.hidden=YES;
        WeakSelf(self);
        _popV.SelectConditionVBlock = ^(NSString *content, NSInteger type, NSInteger tag) {
            [weakself.selectV reloadConditWithContent:content withSearchConditionType:type];
            if (content.length>0) {
                if (type==0) {
                    NSArray *array = @[@"7",@"30",@"90",@"180",@"365"];
                    NSInteger day = [array[tag] integerValue];
                    weakself.startdate = [PublicManager getTimeWithNowDateWithDay:-day];
                }
                else
                {
                    NSArray *array = @[@"0",@"3",@"4",@"100"];
                    NSInteger assetsType = [array[tag] integerValue];
                    weakself.assetsType=assetsType;
                }
                [weakself getData];
            }
        };
        _popV.hideBlock = ^(NSInteger type) {
            [weakself.selectV setNormalButtonWithType:type];
        };
    }
    return _popV;
}

-(UIView*)tableHeadV
{
    UIView *bg = [[UIView alloc]initWithFrame:CGRectMake(0, 0, UI_SCREEN_WIDTH, 210)];
    bg.backgroundColor=[UIColor whiteColor];
    AssetsTopV *headIcon = [[AssetsTopV alloc]initWithFrame:CGRectMake(0,0,UI_SCREEN_WIDTH,210)];
    [bg addSubview:headIcon];
    WeakSelf(self);
    headIcon.forwardBlock = ^{   //提现
        ForwardVC *forward=[[ForwardVC alloc]init];
        forward.totalMoney=self.totalMoney;
        forward.refreshUI = ^{
            [weakself getData];
        };
        [weakself.navigationController pushViewController:forward animated:YES];
    };
    self.topV=headIcon;
    return bg;
}

#pragma mark -
#pragma mark - UITableViewDataSource&&UITableViewDelegate

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return .1f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 35.0;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return self.dataSource.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [self.dataSource[section]count];
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 60;
}

-(UIView*)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    static NSString *identifer = @"AssetsMainHeadV";
    AssetsMainHeadV *headerView = [tableView dequeueReusableHeaderFooterViewWithIdentifier:identifer];
    if(!headerView)
    {
        headerView = [[AssetsMainHeadV alloc] initWithReuseIdentifier:identifer];
        [headerView.backgroundView setBackgroundColor:[UIColor clearColor]];
    }
    AssetModel *model = [self.dataSource[section] firstObject];
    [headerView reloadUIWithMonth:model.month];
    return headerView;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifer = @"AssetsMainCell";
    AssetsMainCell *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
    if(!cell)
    {
        cell = [[AssetsMainCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.backgroundColor=[UIColor whiteColor];
    }
    [cell reloadUIWithModel:self.dataSource[indexPath.section][indexPath.row]];
    return cell;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
}

-(void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    [self jugeAlpha];
    float offsetY = self.tableV.contentOffset.y;
    CGFloat offsetH = -SafeAreaTopHeight- offsetY;
    
    if (offsetH < 0) return;
    
    [self.topV changeImageFrameWithOffY:offsetY];
}

//table偏移
-(void)jugeAlpha
{
    float offsetY = self.tableV.contentOffset.y;
    if (offsetY<(160-SafeAreaTopHeight))
    {
        [self.navigationItem setTitleView:[CustomNavVC setWhiteNavgationItemTitle:@"资产管理"]];
        [self.navigationItem setLeftBarButtonItem:[[UIBarButtonItem alloc] initWithCustomView:[CustomNavVC getLeftDefaultWhiteButtonWithTarget:self action:@selector(onGoback)]]];
        
        self.selectV.frame=CGRectMake(0,160-offsetY, UI_SCREEN_WIDTH, 50);
    }
    else
    {
        
        [self.navigationItem setTitleView:[CustomNavVC setDefaultNavgationItemTitle:@"资产管理"]];
        
        [self.navigationItem setLeftBarButtonItem:[[UIBarButtonItem alloc] initWithCustomView:[CustomNavVC getLeftDefaultButtonWithTarget:self action:@selector(onGoback)]]];
        
        self.selectV.frame=CGRectMake(0,SafeAreaTopHeight, UI_SCREEN_WIDTH, 50);
    }
    
    self.popV.frame=CGRectMake(0,self.selectV.frame.origin.y+50, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT-self.selectV.frame.origin.y-50);
    
    
    [self.navigationController.navigationBar setBackgroundImage:[UIImage imageWithColor:[[UIColor whiteColor]colorWithAlphaComponent:(offsetY/(160-SafeAreaTopHeight))>0.99?0.99:(offsetY /(160-SafeAreaTopHeight))]] forBarMetrics:UIBarMetricsDefault];
    [self.navigationController.navigationBar setShadowImage:[[UIImage alloc] init]];

}

#pragma mark--
#pragma mark--按月份分组
- (void)getSameArrayList:(NSArray *)arrayList
{
    NSMutableArray *diffArray = [NSMutableArray array];
    NSMutableArray *sameArray = [NSMutableArray array];
    [sameArray addObject:arrayList[0]];
    for (int i = 1; i < arrayList.count; i ++) {
        AssetModel *model1 = arrayList[i];
        AssetModel *model2 = sameArray[0];
        
        if (model1.month==model2.month) {
            [sameArray addObject:arrayList[i]];
        }else{
            [diffArray addObject:arrayList[i]];
        }
    }
    [self.dataSource addObject:sameArray];
    if (diffArray.count != 0) {
        [self getSameArrayList:diffArray];
    }
}

//时间排序
-(NSArray*)dateSortWithArray:(NSArray*)array
{
    NSArray *sortArray = [array sortedArrayUsingComparator:^NSComparisonResult(id obj1, id obj2) {
        
        AssetModel *pModel1 = obj1;
        AssetModel *pModel2 = obj2;
        
        //时间
        
        NSDateFormatter *dateFormatter = [[NSDateFormatter alloc] init];
        
        [dateFormatter setDateFormat: @"yyyy-MM-dd HH:mm:ss"];
        
        NSDate *date1= [dateFormatter dateFromString:pModel1.tradingDate];
        NSDate *date2= [dateFormatter dateFromString:pModel2.tradingDate];
        
        if (date1 == [date1 earlierDate: date2]) { //不使用intValue比较无效
            
            return NSOrderedDescending;//降序
            
        }else if (date1 == [date1 laterDate: date2]) {
            return NSOrderedAscending;//升序
            
        }else{
            return NSOrderedSame;//相等
        }
    }];
    return sortArray;
}
@end
