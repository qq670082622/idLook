//
//  HomeMainVC.m
//  IDLook
//
//  Created by HYH on 2018/3/7.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "HomeMainVC.h"
#import "WordSearchVC.h"
#import "SearchMainVC.h"
#import "HomeService.h"
#import "UserInfoVC.h"
#import "RecommendVC.h"
#import "HomeMainVCM.h"
#import "HomeMirrorVC.h"
#import "AuthUploadBasicVC.h"
#import "MyAuthStateVC.h"
#import "LookPricePopV.h"
#import "VideoPlayer.h"
#import "HomeMainCellD.h"
#import "PlaceShotOrderVC.h"
#import "AdvBannerView.h"
#import "BannerPopV.h"
#import "TalentModel.h"
#import "PublicWebVC.h"

@interface HomeMainVC ()<HomeServiceDelegate,UIScrollViewDelegate>
{
    VideoPlayer *_player;
}
@property(nonatomic,strong)CustomTableV *tableV;
@property(nonatomic,strong)HomeService *service;
@property(nonatomic,strong)UIButton *inputBtn;   //输入框
@property(nonatomic,strong)HomeMainVCM *dsm;   //viewmodel处理数据
@property(nonatomic,strong)NSIndexPath *currentIndexPath;
@property(nonatomic,strong)AdvBannerView *bannerView;
@end

@implementation HomeMainVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor=Public_Background_Color;
    [self.navigationItem setTitleView:self.inputBtn];
 
    [self dsm];
    [self tableV];
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [_player destroyPlayer];
    _player = nil;
    [self.navigationController setHidesBottomBarWhenPushed:NO];
}

-(void)viewWillAppear:(BOOL)animated
{
    
}

//输入框进入关键字搜索
-(void)wordsearch
{
    WordSearchVC *searchVC=[[WordSearchVC alloc]init];
    searchVC.hidesBottomBarWhenPushed=YES;
    [self.navigationController pushViewController:searchVC animated:YES];
}

-(UIButton*)inputBtn
{
    if (!_inputBtn) {
        _inputBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        _inputBtn.frame = CGRectMake(0, 0, UI_SCREEN_WIDTH-30, 30);
        _inputBtn.layer.masksToBounds=YES;
        _inputBtn.layer.cornerRadius=4.0;
        _inputBtn.backgroundColor=Public_LineGray_Color;
        [_inputBtn setTitle:@"搜脸  找灵感" forState:UIControlStateNormal];
        _inputBtn.titleLabel.font=[UIFont systemFontOfSize:12.0];
        [_inputBtn setTitleColor:[UIColor colorWithHexString:@"#D4D4D4"] forState:UIControlStateNormal];
        [_inputBtn setImage:[UIImage imageNamed:@"icon_search"] forState:UIControlStateNormal];
        [_inputBtn setImage:[UIImage imageNamed:@"icon_search"] forState:UIControlStateHighlighted];
        [_inputBtn setImageEdgeInsets:UIEdgeInsetsMake(0, -10,0, 10)];
        [_inputBtn addTarget:self action:@selector(wordsearch) forControlEvents:UIControlEventTouchUpInside];
    }
    return _inputBtn;
}

-(HomeService*)service
{
    if (!_service) {
        _service=[[HomeService alloc]init];
        _service.delegate=self;
        _service.dsm=self.dsm;
    }
    return _service;
}

-(HomeMainVCM*)dsm
{
    if (!_dsm) {
        _dsm=[[HomeMainVCM alloc]init];
        WeakSelf(self);
        _dsm.newDataNeedRefreshed = ^(BOOL success) {
            if (success) {  //刷新ui
                [weakself.tableV reloadData];
            }
            [weakself.tableV headerEndRefreshing];
            [weakself.tableV footerEndRefreshing];
        };
        _dsm.refreshBanner = ^(BOOL success) {
            if (success) {
                weakself.bannerView.rollInterval=2.0;
                [weakself.bannerView setImagesWithBannerDatas:weakself.dsm.bannerArray];
            }
        };
    }
    return _dsm;
}

-(CustomTableV*)tableV
{
    if (!_tableV) {
        _tableV = [[CustomTableV alloc] initWithFrame:CGRectMake(0,0,UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT) style:UITableViewStyleGrouped];
        _tableV.delegate = self.service;
        _tableV.dataSource = self.service;
        _tableV.separatorStyle=UITableViewCellSeparatorStyleNone;
        _tableV.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        _tableV.showsVerticalScrollIndicator=NO;
        _tableV.showsHorizontalScrollIndicator=NO;
        [self.view addSubview:_tableV];
        _tableV.estimatedRowHeight = 0;
        _tableV.estimatedSectionHeaderHeight = 0;
        _tableV.estimatedSectionFooterHeight = 0;
        _tableV.backgroundColor=[UIColor clearColor];
        _tableV.tableHeaderView=[self tableHeadV];
        [_tableV addHeaderWithTarget:self action:@selector(pullDownToRefresh:)];
//        [_tableV addFooterWithTarget:self action:@selector(pullUpToRefresh:)];
    }
    return _tableV;
}

-(UIView*)tableHeadV
{
    UIView *bg = [[UIView alloc]initWithFrame:CGRectMake(0, 0, UI_SCREEN_WIDTH, (260.0/750.0)*(UI_SCREEN_WIDTH)+15)];
    bg.backgroundColor=[UIColor whiteColor];
    AdvBannerView *bannerView = [[AdvBannerView alloc]initWithFrame:CGRectMake(0,15, UI_SCREEN_WIDTH, (260.0/750.0)*(UI_SCREEN_WIDTH))] ;
    bannerView.rollInterval=2.0;
    bannerView.animateInterval=0.5;
    [bg addSubview:bannerView];
    WeakSelf(self);
    bannerView.clickBannerWithTag = ^(NSInteger tag) {
        NSDictionary *dic =weakself.dsm.bannerArray[tag];
        PublicWebVC * webVC = [[PublicWebVC alloc] initWithTitle:dic[@"name"] url:dic[@"jumpurl"]];
        webVC.hidesBottomBarWhenPushed=YES;
        [weakself.navigationController pushViewController:webVC animated:YES];
    };
    self.bannerView=bannerView;
    return bg;
}

-(void)pullDownToRefresh:(id)sender
{
    [self.dsm refreshHomeInfoWithSortPage:1 withRefreshType:RefreshTypePullDown];
}

-(void)pullUpToRefresh:(id)sender
{
    UserInfoM *info = [self.dsm.ds lastObject];
    [self.dsm refreshHomeInfoWithSortPage:info.sortpage+1 withRefreshType:RefreshTypePullUp];
}

#pragma mark---HomeServiceDelegate
//微代言，微出镜，招商项目
-(void)didClick1WithType:(NSInteger)type
{
    [SVProgressHUD showImage:nil status:@"功能正在开发中，敬请期待。"];
}

//按类型搜索
-(void)didClick2WithType:(NSInteger)type
{
    if (type<=3) {
        //按类型搜索
        SearchMainVC *searchVC=[[SearchMainVC alloc]init];
        searchVC.hidesBottomBarWhenPushed=YES;
        searchVC.type=type;
        [self.navigationController pushViewController:searchVC animated:YES];
    }
    else
    {
        [SVProgressHUD showImage:nil status:@"功能正在开发中，敬请期待。"];
    }
}


//进入艺人主页
-(void)didClickUser:(UserInfoM *)info withSelect:(NSString *)select
{
    UserInfoVC *userInfoVC=[[UserInfoVC alloc]init];
    userInfoVC.hidesBottomBarWhenPushed=YES;
    userInfoVC.info =info;
    userInfoVC.select=select;
    [self.navigationController pushViewController:userInfoVC animated:YES];
}



-(void)playVideoWithVideoUrl:(NSString *)url withIndexPath:(NSIndexPath *)indexPath
{
    self.currentIndexPath=indexPath;
    [_player destroyPlayer];
    _player = nil;
    
    HomeMainCellD *cell = [self.tableV cellForRowAtIndexPath:indexPath];
    
    _player = [[VideoPlayer alloc] init];
    _player.isMute=[UserInfoManager getListPlayIsMute];
    _player.videoUrl =url;
    [_player playerBindTableView:self.tableV currentIndexPath:indexPath];
    
    _player.frame = CGRectMake(22,108,UI_SCREEN_WIDTH-44,186);
    [cell.contentView addSubview:_player];
    
    _player.completedPlayingBlock = ^(VideoPlayer *player) {
        [player destroyPlayer];
        player = nil;
    };
}

//结束播放
-(void)endDeceleratingPlay
{
    [_player destroyPlayer];
    _player =nil;
    
}

-(void)scrollViewEndScrollView
{
    if ([[NetworkNoti shareInstance]getNetworkStatus]==AFNetworkReachabilityStatusReachableViaWWAN && [UserInfoManager getWWanAuthPlay]==NO) {
        return;
    }
    else if ([[NetworkNoti shareInstance]getNetworkStatus]==AFNetworkReachabilityStatusReachableViaWiFi && [UserInfoManager getWifiAuthPlay]==NO)
    {
        return;
    }
    
    NSArray<NSIndexPath *> * cellArr = [self.tableV indexPathsForVisibleRows];
    if (cellArr.count>=2) {
        NSIndexPath * currentIndexPath = cellArr[cellArr.count - 2];
        if (self.currentIndexPath==currentIndexPath) {
            return;
        }
        if (cellArr.count==2 &&currentIndexPath.section==0) {
            return;
        }
        UserInfoM *info = self.dsm.ds[currentIndexPath.row];
        
        if (info.showlist.count==0) {
            return;
        }
        
        NSDictionary *list = info.showlist[0][@"lists"];
        NSArray *talent = (NSArray*)safeObjectForKey(list, @"talent");
        NSArray *pastwork = (NSArray*)safeObjectForKey(list, @"pastwork");
        NSArray *modelcard = (NSArray*)safeObjectForKey(list, @"modelcard");

        NSString *url;
        if (talent.count>0) {
            TalentModel *model = [[TalentModel alloc]initTalentDic:[talent firstObject]];
            url = model.video;
        }
        else if (pastwork.count>0)
        {
            WorksModel *model = [[WorksModel alloc]initWithPastWorkDic:[pastwork firstObject]];
            url = model.url;
        }
        else if (modelcard.count>0)
        {
            TalentModel *model = [[TalentModel alloc]initModelCardDic:[modelcard firstObject]];
            url = model.video;
        }
        
        [self playVideoWithVideoUrl:url withIndexPath:currentIndexPath];
    }
}

//scrollview滑动
-(void)scrollUpScreen
{
    [_player playerScrollIsSupportSmallWindowPlay:NO];
}

//推荐列表界面
-(void)entryMoreRecommend
{
    self.tabBarController.selectedIndex=1;
}

//查看报价
-(void)lookUserPriceInfo:(UserInfoM *)info
{
    if ([UserInfoManager getUserLoginType]==UserLoginTypeTourist) {
        [SVProgressHUD showImage:nil status:@"登录后可查看报价！"];
        return;
    }
    
    //未认证成功，跳到认证界面
    if ([UserInfoManager getUserAuthState]!=1) {
        [self goAuth];
        return;
    }
    
    NSDictionary *dicArg = @{@"userid":info.UID};
    [AFWebAPI getQuotaListWithArg:dicArg callBack:^(BOOL success, id object) {
        if (success) {
            [SVProgressHUD dismiss];
            NSArray *array =[object objectForKey:JSON_data];
            if (array.count>0) {
                LookPricePopV *popV= [[LookPricePopV alloc]init];
                [popV showWithArray:array];
                popV.placeActionBlock = ^(NSInteger type, NSString *title) {
                    PlaceShotOrderVC *shotVC=[[PlaceShotOrderVC alloc]init];
                    shotVC.info=info;
                    shotVC.advType = [array[type][@"adverttype"]integerValue];
                    shotVC.advSubType = [array[type][@"singletype"]integerValue];
                    shotVC.advName = title;
                    shotVC.hidesBottomBarWhenPushed=YES;
                    [self.navigationController pushViewController:shotVC animated:YES];
                };
            }
            else
            {
                [SVProgressHUD showImage:nil status:@"暂无报价！"];
                return;
            }
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
    
}

#pragma mark --未认证，先去认证
-(void)goAuth
{
    if ([UserInfoManager getUserAuthState]==3){  //审核中
        [SVProgressHUD showImage:nil status:@"你的认证信息正在审核中，通过后才能查看报价！"];
        return;
    }
    
    UIAlertController *alert=[UIAlertController alertControllerWithTitle:@"去认证" message:@"认证通过之后您才能查看报价！" preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *action0 = [UIAlertAction actionWithTitle:@"去认证"
                                                      style:UIAlertActionStyleDestructive
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                        
                                                        if ([UserInfoManager getUserAuthState]==0) {
                                                            AuthUploadBasicVC *authVC=[[AuthUploadBasicVC alloc]init];
                                                            authVC.hidesBottomBarWhenPushed=YES;
                                                            [self.navigationController pushViewController:authVC animated:YES];
                                                        }
                                                        else if ([UserInfoManager getUserAuthState]==2 || [UserInfoManager getUserAuthState]==3)
                                                        {
                                                            MyAuthStateVC *stateVC=[[MyAuthStateVC alloc]init];
                                                            stateVC.authState=[UserInfoManager getUserAuthState];
                                                            stateVC.hidesBottomBarWhenPushed=YES;
                                                            [self.navigationController pushViewController:stateVC animated:YES];
                                                        }
                                                    }];
    UIAlertAction *action1 = [UIAlertAction actionWithTitle:@"取消"
                                                      style:UIAlertActionStyleCancel
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                    }];
    [alert addAction:action0];
    [alert addAction:action1];
    [self presentViewController:alert animated:YES completion:^{}];
}

@end
