//
//  PersonalInfoVC.m
//  IDLook
//
//  Created by HYH on 2018/5/15.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "PersonalInfoVC.h"
#import "EditInfoCellA.h"
#import "EditInfoCellB.h"
#import "EditInfoVC.h"
#import "PublicPickerView.h"
#import "RegionChooseVC.h"
#import "RegistCellA.h"
#import "UploadHeadVC.h"
#import "UploadPersonBGVC.h"
#import "CustTableViewCell.h"

@interface PersonalInfoVC ()<UITableViewDelegate,UITableViewDataSource,UIImagePickerControllerDelegate,UINavigationControllerDelegate>
@property(nonatomic,strong)CustomTableV *tableV;
@property(nonatomic,strong)NSMutableArray *dataSource;
@property(nonatomic,strong)UIImage *head;
@property(nonatomic,strong)UIImage *iconBG;
@end

@implementation PersonalInfoVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor=[UIColor whiteColor];
    [self.navigationItem setTitleView:[CustomNavVC setDefaultNavgationItemTitle:@"个人信息"]];
    [self.navigationItem setLeftBarButtonItem:[[UIBarButtonItem alloc] initWithCustomView:[CustomNavVC getLeftDefaultButtonWithTarget:self action:@selector(onGoback)]]];
    
    [self getData];
}

-(void)onGoback
{
    self.EditInfosBlock();
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)getData
{
    if ([UserInfoManager getUserType]==UserTypeResourcer) {  //资源方
        self.dataSource = [[NSMutableArray alloc]initWithObjects:
                           @[@{@"title":@"头像",@"content":@"",@"desc":@"",@"type":@(-1),@"placeholder":@"",@"isSave":@(YES),@"isRequired":@(YES)},
                             @{@"title":@"用户ID",@"content":[UserInfoManager getUserUID],@"desc":@"暂未填写",@"type":@(-1),@"placeholder":@"请输入微博名",@"isSave":@(YES),@"isRequired":@(YES)},
                             @{@"title":@"微博名",@"content":[UserInfoManager getUserSinaName],@"desc":@"暂未填写",@"type":@(EditTypeWeiBoName),@"placeholder":@"请输入微博名",@"isSave":@(YES),@"parameter":@"weiboname",@"isRequired":@(NO)},
                             @{@"title":@"微博粉丝数",@"content":[UserInfoManager getUserSinaFansNumber]<=0?@"":[NSString stringWithFormat:@"%@万", [PublicManager changeFloatWithFloat:[UserInfoManager getUserSinaFansNumber]]],@"desc":@"暂未填写",@"type":@(EditTypeWeiBoFans),@"placeholder":@"请输入微博粉丝数（万为单位）",@"isSave":@(YES),@"parameter":@"weibofans",@"isRequired":@(NO)}],
                           nil];
    }
    else if([UserInfoManager getUserType]==UserTypePurchaser)  //购买方
    {
        self.dataSource = [[NSMutableArray alloc]initWithObjects:
                           @[@{@"title":@"头像",@"content":@"",@"desc":@"",@"type":@(-1),@"placeholder":@"",@"isSave":@(YES),@"isRequired":@(YES)},
                             @{@"title":@"用户ID",@"content":[UserInfoManager getUserUID],@"desc":@"暂未填写",@"type":@(-1),@"placeholder":@"",@"isSave":@(YES),@"isRequired":@(YES)}],
                           @[@{@"title":@"所在地",@"content":[UserInfoManager getUserRegion],@"desc":@"暂未填写",@"type":@(EditTypeRegion),@"placeholder":@"",@"isSave":@(YES),@"parameter":@"region",@"isRequired":@(YES)},
                             @{@"title":@"详细通讯地址",@"content":[UserInfoManager getUserAddress],@"desc":@"暂未填写",@"type":@(EditTypeAddress),@"placeholder":@"请输入详细通讯地址",@"isSave":@(YES),@"parameter":@"address",@"isRequired":@(YES)},
                             @{@"title":@"邮政编码",@"content":[UserInfoManager getUserPostalCode],@"desc":@"暂未填写",@"type":@(EditTypePostCode),@"placeholder":@"请输入邮政编码",@"isSave":@(YES),@"parameter":@"postalcode",@"isRequired":@(NO)},
                             @{@"title":@"电子邮箱",@"content":[UserInfoManager getUserEmail],@"desc":@"暂未填写",@"type":@(EditTypeEmail),@"placeholder":@"请输入电子邮箱",@"isSave":@(YES),@"parameter":@"email",@"isRequired":@(YES)},
                             @{@"title":@"联系电话(1)",@"content":[UserInfoManager getUserContactnumber1],@"desc":@"暂未填写",@"type":@(EditTypeUrgentPhone1),@"placeholder":@"请输入联系电话",@"isSave":@(YES),@"parameter":@"contactnumber1",@"isRequired":@(YES)},
                             @{@"title":@"联系电话(2)",@"content":[UserInfoManager getUserContactnumber2],@"desc":@"暂未填写",@"type":@(EditTypeUrgentPhone2),@"placeholder":@"请输入联系电话",@"isSave":@(YES),@"parameter":@"contactnumber2",@"isRequired":@(NO)}],
                           nil];
    }
    
    [self.tableV reloadData];
}

-(CustomTableV*)tableV
{
    if (!_tableV) {
        _tableV = [[CustomTableV alloc] initWithFrame:CGRectMake(0,0,UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT) style:UITableViewStyleGrouped];
        _tableV.delegate = self;
        _tableV.dataSource = self;
        _tableV.showsVerticalScrollIndicator=NO;
        _tableV.showsHorizontalScrollIndicator=NO;
        _tableV.separatorStyle=UITableViewCellSeparatorStyleNone;
        _tableV.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        [self.view addSubview:_tableV];
        _tableV.estimatedRowHeight = 0;
        _tableV.estimatedSectionHeaderHeight = 0;
        _tableV.estimatedSectionFooterHeight = 0;
        _tableV.backgroundColor=Public_Background_Color;
    }
    return _tableV;
}

#pragma mark -
#pragma mark - UITableViewDataSource&&UITableViewDelegate

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 10.f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section==0) {
        return .1f;
    }
    return 10.f;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return self.dataSource.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [self.dataSource[section]count];
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section==0&&indexPath.row==0) {
        if ([UserInfoManager getUserType]==UserTypeResourcer) {
            return UI_SCREEN_WIDTH*0.66;;
        }
        else
        {
            return 95;
        }
    }
    return 48;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section==0 && indexPath.row==0) {
        if ([UserInfoManager getUserType]==UserTypeResourcer) {
            static NSString *identifer = @"RegistCellA";
            RegistCellA *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
            if(!cell)
            {
                cell = [[RegistCellA alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                cell.backgroundColor=[UIColor whiteColor];
            }
            WeakSelf(self);
            cell.uploadBGBlock = ^{
                [weakself uploadBG];
            };
            cell.uploadHeadBlock = ^{
                [weakself uploadHead];
            };
            
            NSString *headUrl;
            BOOL isShow=NO;
            if ([UserInfoManager getUserHeadstatus]==1) {
                headUrl = [UserInfoManager getUserMiniaudit];
                isShow=YES;
            }
            else
            {
                headUrl = [UserInfoManager getUserHead];
                isShow=NO;
            }
            
            [cell reloadUIHead:nil withBG:nil withheadUrl:headUrl withBGUrl:[UserInfoManager getUserBackGround] withType:1 isShowState:isShow];
            
            return cell;
        }
        else
        {
            static NSString *identifer = @"EditInfoCellA";
            EditInfoCellA *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
            if(!cell)
            {
                cell = [[EditInfoCellA alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                cell.backgroundColor=[UIColor whiteColor];
            }
            [cell reloadUI];
            return cell;
        }
    }
    else
    {
        static NSString *identifer = @"CustTableViewCell";
        CustTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[CustTableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
        }
        [cell reloadUIWithDic:self.dataSource[indexPath.section][indexPath.row]];
        return cell;
    }
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    NSInteger sec =indexPath.section;
    NSInteger row =indexPath.row;
    
    EditType type = [self.dataSource[sec][row][@"type"]integerValue];
    
    if (type==EditTypeOther && [UserInfoManager getUserType]==UserTypePurchaser) {  //购买方修改头像
        [self selectHeadIcon];
    }
    
    if (type>=EditTypeWeiBoName)
    {
        if (type==EditTypeRegion) {
            RegionChooseVC *regionVC=[[RegionChooseVC alloc]init];
            [self.navigationController pushViewController:regionVC animated:YES];
            WeakSelf(self);
            regionVC.selectCity = ^(NSString *city)
            {
                [SVProgressHUD showWithMaskType:SVProgressHUDMaskTypeClear];
                NSDictionary *dicAry =@{@"userid":[UserInfoManager getUserUID],
                                        @"region":city};
                [AFWebAPI modifMyotherInfoWithAry:dicAry callBack:^(BOOL success, id object) {
                    if (success) {
                        [SVProgressHUD showSuccessWithStatus:@"保存成功"];
                        NSDictionary *dic = [object objectForKey:JSON_data];
                        
                        UserInfoM *uinfo = [[UserInfoM alloc] initWithDic:dic];
                        [UserInfoManager setUserLoginfo:uinfo];
                        [weakself getData];
                    }
                    else
                    {
                        AF_SHOW_RESULT_ERROR
                    }
                }];
                
            };
        }
        else
        {
            EditInfoVC *editVC=[[EditInfoVC alloc]init];
            editVC.info=self.dataSource[indexPath.section][indexPath.row];
            WeakSelf(self);
            editVC.didSelectBlock = ^(NSString *select) {
                [weakself getData];
            };
            [self.navigationController pushViewController:editVC animated:YES];
        }
    }
}


//上传头像
-(void)uploadHead
{
    UploadHeadVC *uploadVC=[[UploadHeadVC alloc]init];
    uploadVC.isSave=YES;
    WeakSelf(self);
    uploadVC.addHeadBlock = ^(UIImage *image) {
        weakself.head=image;
        [weakself.tableV reloadData];
    };
    [self.navigationController pushViewController:uploadVC animated:YES];
}

//上传背景图
-(void)uploadBG
{
    UploadPersonBGVC *uploadVC=[[UploadPersonBGVC alloc]init];
    uploadVC.isSave=YES;
    WeakSelf(self);
    uploadVC.addHeadBGBlock = ^(UIImage *image) {
        weakself.iconBG=image;
        [weakself.tableV reloadData];
    };
    [self.navigationController pushViewController:uploadVC animated:YES];
}

#pragma mark -
#pragma mark - set Head Icon
-(void)imagePickerController:(UIImagePickerController*)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    NSString *type = [info objectForKey:UIImagePickerControllerMediaType];
    
    if ([type isEqualToString:@"public.image"])
    {
        UIImage* image = [info objectForKey:UIImagePickerControllerEditedImage];
        
        [SVProgressHUD showWithStatus:@"正在上传头像" maskType:SVProgressHUDMaskTypeClear];
        NSDictionary *dicArg =@{@"userid":[UserInfoManager getUserUID]};
        
        NSDictionary *infoDic = @{@"head":image};
        
        [AFWebAPI modifMyotherInfoWithArg:dicArg DataDic:infoDic callBack:^(BOOL success, id object) {
            if (success) {
                [SVProgressHUD showSuccessWithStatus:@"上传成功"];
                NSDictionary *dic = [object objectForKey:JSON_data];
                UserInfoM *uinfo = [[UserInfoM alloc] initWithDic:dic];
                [UserInfoManager setUserLoginfo:uinfo];
 
                [self.tableV reloadData];
            }
            else
            {
                AF_SHOW_RESULT_ERROR
            }
        }];
    }
    [picker dismissViewControllerAnimated:YES completion:^{}];
}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
{
    [picker dismissViewControllerAnimated:YES completion:^{}];
}


- (void)selectHeadIcon
{
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil
                                                                   message:nil
                                                            preferredStyle:UIAlertControllerStyleActionSheet];
    UIAlertAction *action0 = [UIAlertAction actionWithTitle:@"手机拍照" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        UIImagePickerControllerSourceType sourceType = UIImagePickerControllerSourceTypeCamera;
        if ([UIImagePickerController isSourceTypeAvailable: UIImagePickerControllerSourceTypeCamera])
        {
            UIImagePickerController *picker = [[UIImagePickerController alloc] init];
            picker.delegate = self;
            picker.allowsEditing = YES;
            picker.sourceType = sourceType;
            [self presentViewController:picker animated:YES completion:^{}];
        }
        else
        {}
    }];
    UIAlertAction *action1 = [UIAlertAction actionWithTitle:@"本地图片" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        UIImagePickerController *picker = [[UIImagePickerController alloc] init];
        
        picker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
        picker.delegate = self;
        picker.allowsEditing = YES;
        
        [self presentViewController:picker animated:YES completion:^{}];
    }];
    UIAlertAction *action2 = [UIAlertAction actionWithTitle:@"取消"
                                                      style:UIAlertActionStyleCancel
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                        [alert dismissViewControllerAnimated:YES completion:^{}];
                                                    }];
    
    [alert addAction:action0];
    [alert addAction:action1];
    [alert addAction:action2];
    
    dispatch_async(dispatch_get_main_queue(), ^{
        [self presentViewController:alert animated:YES completion:nil];
    });
}




@end
