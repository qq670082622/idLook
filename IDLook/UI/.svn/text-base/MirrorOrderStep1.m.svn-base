//
//  MirrorOrderStep1.m
//  IDLook
//
//  Created by HYH on 2018/6/20.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "MirrorOrderStep1.h"
#import "MirrorOrderCellA.h"
#import "PlaceOrderModel.h"
#import "PlaceOrderCustomCell.h"
#import "PlaceOrderHeadV.h"
#import "PlaceOrderFootV.h"
#import "MirrorOrderStep2.h"
#import "OrderSelectPopV.h"
#import "OrderPickerPopV.h"
#import "RegionSelectStep1.h"

@interface MirrorOrderStep1 ()<UITableViewDelegate,UITableViewDataSource,TableVTouchDelegate>
@property(nonatomic,strong)TouchTableV *tableV;
@property(nonatomic,strong)NSMutableArray *dataSource;
@end

@implementation MirrorOrderStep1

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor=Public_Background_Color;
    
    [self.navigationItem setTitleView:[CustomNavVC setDefaultNavgationItemTitle:@"微出镜下单"]];
    
    [self.navigationItem setLeftBarButtonItem:[[UIBarButtonItem alloc] initWithCustomView:[CustomNavVC getLeftDefaultButtonWithTarget:self action:@selector(onGoback)]]];
    
    [self getData];
    
    [self tableV];
}

-(void)onGoback
{
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)getData
{
    self.dataSource =[[NSMutableArray alloc]initWithCapacity:0];
    
    [self.dataSource addObject:@[self.info]];
    [self.dataSource addObject:[PlaceOrderModel getBrandIntroduction]];
    [self.dataSource addObject: [PlaceOrderModel getMirrorRequirement]];
}

-(TouchTableV*)tableV
{
    if (!_tableV) {
        _tableV = [[TouchTableV alloc] initWithFrame:CGRectMake(0,0,UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT-SafeAreaTabBarHeight_IphoneX) style:UITableViewStyleGrouped];
        _tableV.delegate = self;
        _tableV.dataSource = self;
        _tableV.touchDelegate=self;
        _tableV.showsVerticalScrollIndicator=NO;
        _tableV.showsHorizontalScrollIndicator=NO;
        _tableV.separatorStyle=UITableViewCellSeparatorStyleNone;
        _tableV.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        [self.view addSubview:_tableV];
        _tableV.estimatedRowHeight = 0;
        _tableV.estimatedSectionHeaderHeight = 0;
        _tableV.estimatedSectionFooterHeight = 0;
        _tableV.backgroundColor=[UIColor clearColor];
    }
    return _tableV;
}

#pragma mark -
#pragma mark - UITableViewDataSource&&UITableViewDelegate

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    if (section==2) {
        return 120;
    }
    return .1f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section==0) {
        return 40.f;
    }
    return 50.f;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 3;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section==0) {
        return 1;
    }
    return [self.dataSource[section]count];
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section==0) {
        return 165;
    }
    return 48;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section==0) {
        static NSString *identifer = @"MirrorOrderCellA";
        MirrorOrderCellA *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[MirrorOrderCellA alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
        }
        [cell reloadUIWithWork:self.workModel];
        return cell;
    }
    else
    {
        static NSString *identifer = @"PlaceOrderCustomCell";
        PlaceOrderCustomCell *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[PlaceOrderCustomCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
        }
        [cell reloadUIWithModel:self.dataSource[indexPath.section][indexPath.row]];
        return cell;
    }
}

-(UIView*)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    static NSString *identifer = @"PlaceOrderHeadV";
    PlaceOrderHeadV *headerView = [tableView dequeueReusableHeaderFooterViewWithIdentifier:identifer];
    if(!headerView)
    {
        headerView = [[PlaceOrderHeadV alloc] initWithReuseIdentifier:identifer];
        [headerView.backgroundView setBackgroundColor:[UIColor clearColor]];
    }
    NSString *title=@"";
    if (section==0) {
        if (self.workModel.microtype==0) {
            title = @"独家授权照片基本信息";
        }
        else
        {
            title = @"独家授权视频基本信息";
        }
    }
    else if (section==1)
    {
        title = @"品牌方介绍";
    }
    else if (section==2)
    {
        title = @"微出镜任务要求";
    }
    [headerView reloadUIWithTitle:title];
    return headerView;
}

-(UIView*)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    if (section==2) {
        static NSString *identifer = @"PlaceOrderFootV";
        PlaceOrderFootV *footerView = [tableView dequeueReusableHeaderFooterViewWithIdentifier:identifer];
        if(!footerView)
        {
            footerView = [[PlaceOrderFootV alloc] initWithReuseIdentifier:identifer];
            [footerView.backgroundView setBackgroundColor:[UIColor clearColor]];
            WeakSelf(self);
            footerView.nextStep = ^{
                [weakself nextStep];
            };
        }
        [footerView reloadUIWithTitle:@"下一步"];
        return footerView;
    }
    return nil;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if (indexPath.section==2)
    {

        PlaceOrderCustomCell *cell = [tableView cellForRowAtIndexPath:indexPath];

        if (indexPath.row==0) {
            OrderPickerPopV *pickerV = [[OrderPickerPopV alloc] init];
            pickerV.title=[self.dataSource[indexPath.section][indexPath.row] objectForKey:@"title"];
            pickerV.didSelectBlock = ^(NSString *select,NSInteger type) {
                cell.textField.text=select;
            };
            [pickerV showWithPickerType:OrderCheckTypeMirrCycle+indexPath.row withDesc:cell.textField.text];
        }
        else if (indexPath.row==1)
        {
            NSArray  *array = [NSArray array]; 
            if (cell.textField.text.length) {
                array=[cell.textField.text componentsSeparatedByString:@"、"];
            }
            
            RegionSelectStep1 *step1 = [[RegionSelectStep1 alloc]init];
            step1.selectedArr=array;
            step1.type=RegionTypeMirr;
            step1.selectCity = ^(NSString *city) {
                cell.textField.text=city;
            };
            [self.navigationController pushViewController:step1 animated:YES];
        }
        else if (indexPath.row==2)
        {
            OrderSelectPopV *popV = [[OrderSelectPopV alloc]init];
            popV.typeSelectAction = ^(NSString *content) {
                cell.textField.text=content;
            };
            NSArray  *array = [NSArray array];
            if (cell.textField.text.length) {
                array=[cell.textField.text componentsSeparatedByString:@"、"];
            }
            [popV showWithType:OrderCheckTypeMirrRange withSelect:array withTitle:[self.dataSource[indexPath.section][indexPath.row] objectForKey:@"title"]];
        }


    }
    
}

#pragma mark -
#pragma mark - TableVTouchDelegate
- (void)tableView:(UITableView *)tableView touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
{
    [self.view endEditing:YES];
}

-(void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
    [self.view endEditing:YES];
}

#pragma mark---
#pragma 下一步
-(void)nextStep
{
    for (int i =0;i<[self.dataSource[1] count]; i++)
    {
        PlaceOrderCustomCell *cell = [self.tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:i inSection:2]];
        if (cell.textField.text.length==0) {
            [SVProgressHUD showErrorWithStatus:@"请将订单信息填写完整！"];
            return;
        }
    }
    
    for (int i =0;i<[self.dataSource[2] count]; i++)
    {
        PlaceOrderCustomCell *cell = [self.tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:i inSection:2]];
        if (cell.textField.text.length==0) {
            [SVProgressHUD showErrorWithStatus:@"请将订单信息填写完整！"];
            return;
        }
    }
    
    PlaceOrderCustomCell *cell1 = [self.tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:1]];
    PlaceOrderCustomCell *cell2 = [self.tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:1 inSection:1]];
    PlaceOrderCustomCell *cell3 = [self.tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:2 inSection:1]];
    
    PlaceOrderCustomCell *cell4 = [self.tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:2]];
    PlaceOrderCustomCell *cell5 = [self.tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:1 inSection:2]];
    PlaceOrderCustomCell *cell6 = [self.tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:2 inSection:2]];
    
    NSDictionary *dic = @{@"userid":[UserInfoManager getUserUID],
                          @"artistid":self.info.UID,
                          @"entryname":cell1.textField.text,
                          @"brand":cell2.textField.text,
                          @"product":cell3.textField.text,
                          @"microcycle":cell4.textField.text,
                          @"microregion":cell5.textField.text,
                          @"microscope":cell6.textField.text};
    
    MirrorOrderStep2 *step2=[[MirrorOrderStep2 alloc]init];
    step2.dic=dic;
    [self.navigationController pushViewController:step2 animated:YES];
}

@end
