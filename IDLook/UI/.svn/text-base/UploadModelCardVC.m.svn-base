//
//  UploadModelCardVC.m
//  IDLook
//
//  Created by HYH on 2018/5/21.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "UploadModelCardVC.h"
#import "UploadMCCellA.h"
#import "UploadMCCellB.h"
#import "WorkTypeSelectV.h"

@interface UploadModelCardVC ()<UITableViewDelegate,UITableViewDataSource,UIImagePickerControllerDelegate,UINavigationControllerDelegate>
@property(nonatomic,strong)CustomTableV *tableV;
@property(nonatomic,strong)NSData *imageData;
@property(nonatomic,strong)NSData *videoData;
@end

@implementation UploadModelCardVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor=Public_Background_Color;
    [self.navigationItem setTitleView:[CustomNavVC setDefaultNavgationItemTitle:@"上传模特卡/自我介绍"]];
    [self.navigationItem setLeftBarButtonItem:[[UIBarButtonItem alloc] initWithCustomView:[CustomNavVC getLeftDefaultButtonWithTarget:self action:@selector(onGoback)]]];
    
    [self tableV];
    [self initUI];

}

-(void)onGoback
{
    [self.navigationController popViewControllerAnimated:YES];
}

//上传
-(void)upload
{
    UploadMCCellB *cellB= [self.tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:1 inSection:0]];
    if ([self.imageData length]==0) {
        [SVProgressHUD showErrorWithStatus:@"请上传模特卡"];
        return;
    }
    
    if ([self.videoData length]==0) {
        [SVProgressHUD showErrorWithStatus:@"请上传自我介绍"];
        return;
    }
    
    if (cellB.textField.text.length==0) {
        [SVProgressHUD showErrorWithStatus:@"请选择形象类型"];
        return;
    }
    
     [SVProgressHUD showWithStatus:@"正在上传，请稍等" maskType:SVProgressHUDMaskTypeClear];
    NSDictionary *dic = @{@"userid":[UserInfoManager getUserUID],
                          @"type":cellB.textField.text};
    
    [AFWebAPI addmodelcardWithArg:dic imageData:self.imageData videoData:self.videoData callBack:^(BOOL success, id object) {
        if (success) {
            [SVProgressHUD showSuccessWithStatus:@"上传成功"];
            
            NSArray *array= (NSArray *)safeObjectForKey(object, JSON_data);
            
            self.saveRefreshUI(array);
            
            [self onGoback];
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
}

-(void)initUI
{
    UIButton *uploadBtn=[UIButton buttonWithType:UIButtonTypeCustom];
    [uploadBtn setBackgroundImage:[UIImage imageNamed:@"LR_btn"] forState:UIControlStateNormal];
    [uploadBtn setTitle:@"上传" forState:UIControlStateNormal];
    [self.view addSubview:uploadBtn];
    [uploadBtn mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerX.mas_equalTo(self.view);
        make.bottom.mas_equalTo(self.view).offset(-30);
    }];
    [uploadBtn addTarget:self action:@selector(upload) forControlEvents:UIControlEventTouchUpInside];
}

-(CustomTableV*)tableV
{
    if (!_tableV) {
        _tableV = [[CustomTableV alloc] initWithFrame:CGRectMake(0,0,UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT) style:UITableViewStyleGrouped];
        _tableV.delegate = self;
        _tableV.dataSource = self;
        _tableV.showsVerticalScrollIndicator=NO;
        _tableV.showsHorizontalScrollIndicator=NO;
        _tableV.separatorStyle=UITableViewCellSeparatorStyleNone;
        _tableV.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        [self.view addSubview:_tableV];
        _tableV.estimatedRowHeight = 0;
        _tableV.estimatedSectionHeaderHeight = 0;
        _tableV.estimatedSectionFooterHeight = 0;
        _tableV.backgroundColor=Public_Background_Color;
    }
    return _tableV;
}

#pragma mark -
#pragma mark - UITableViewDataSource&&UITableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return .1f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return .1f;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 2;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row==0) {
        return 378;
    }
    else
    {
        return 48;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row==0) {
        static NSString *identifer = @"UploadMCCellA";
        UploadMCCellA *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[UploadMCCellA alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
            WeakSelf(self);
            cell.uploadmodelcardWithType = ^(NSInteger type) {
                [weakself choosePhotoAndVideoWithType:type];
            };
        }
        [cell reloadUI];
        return cell;
    }
    else
    {
        static NSString *identifer = @"UploadMCCellB";
        UploadMCCellB *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[UploadMCCellB alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
            
        }
        [cell reloadUI];
        return cell;
    }
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.row==1) {
        UploadMCCellB *cell = [tableView cellForRowAtIndexPath:indexPath];
        WorkTypeSelectV *selectV=[[WorkTypeSelectV alloc]init];
        selectV.keywordSelectAction = ^(NSString *content) {
            cell.textField.text=content;
        };
        NSArray* array;
        if ([cell.textField.text length]) {
            array=[cell.textField.text componentsSeparatedByString:@"、"];
        }
        [selectV showWithSelectArray:array withType:2];

    }
}

//添加模特卡或自我介绍
-(void)choosePhotoAndVideoWithType:(NSInteger)type
{
    UIImagePickerController *picker = [[UIImagePickerController alloc] init];
    picker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
    picker.delegate = self;
    picker.allowsEditing = NO;
    NSArray *availableMedia = [UIImagePickerController availableMediaTypesForSourceType:UIImagePickerControllerSourceTypeCamera];//Camera所支持的Media格式都有哪些,共有两个分别是@"public.image",@"public.movie"
    
    //添加模特卡（图片）
    if (type==0) {
        picker.mediaTypes = [NSArray arrayWithObject:availableMedia[0]]; //设置媒体类型为public.image
    }
    else   //添加自我介绍（视频）
    {
        picker.mediaTypes = [NSArray arrayWithObject:availableMedia[1]];//设置媒体类型为public.movie
    }
    
    [self presentViewController:picker animated:YES completion:^{}];

}


#pragma mark -
#pragma mark - UIImagePickerControllerDelegate

-(void)imagePickerController:(UIImagePickerController*)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    UploadMCCellA *cellA = [self.tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0]];
    
    NSString *type = [info objectForKey:UIImagePickerControllerMediaType];
    if ([type isEqualToString:@"public.image"]) {
        
        UIImage* image = [info objectForKey:UIImagePickerControllerOriginalImage];
        cellA.modelcardBtn.iconImage=image;
        self.imageData = UIImageJPEGRepresentation(image, 1.0);
    }
    else if ([type isEqualToString:@"public.movie"])
    {
        NSURL *url = [info objectForKey:UIImagePickerControllerMediaURL];
        NSString *URLStr = [NSString stringWithFormat:@"%@",url];
        NSData *file = [NSData dataWithContentsOfURL:url];
        NSLog(@"输出视频的大小:%lu--%@",(unsigned long)[file length],URLStr);
        
        UIImage *image = [PublicManager getVideoPreViewImage:url];  //获取视频第一帧
        cellA.interoduceBtn.iconImage=image;
        
        self.videoData =file;
    }
    
    [picker dismissViewControllerAnimated:YES completion:^{}];
}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
{
    [picker dismissViewControllerAnimated:YES completion:^{}];
}
@end
