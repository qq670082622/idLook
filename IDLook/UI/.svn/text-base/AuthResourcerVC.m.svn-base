//
//  AuthResourcerVC.m
//  IDLook
//
//  Created by Mr Hu on 2018/9/17.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "AuthResourcerVC.h"
#import "AuthCellA.h"
#import "AuthCellB.h"
#import "AuthFootV.h"
#import "BirthSelectV.h"
#import "PublicPickerView.h"
#import "MyAuthStateVC.h"

@interface AuthResourcerVC ()<UIScrollViewDelegate,UITableViewDelegate,UITableViewDataSource,UIImagePickerControllerDelegate,UINavigationControllerDelegate,TableVTouchDelegate>
@property (nonatomic,strong)TouchTableV *tableV;
@property (nonatomic,strong)NSMutableArray *dataS;
@property(nonatomic,strong)NSIndexPath *indexPath;
@property (nonatomic,strong)NSMutableDictionary *imageDic;
@end

@implementation AuthResourcerVC

-(void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self
                                                    name:UIKeyboardWillChangeFrameNotification
                                                  object:nil];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor=Public_Background_Color;
    [self.navigationItem setTitleView:[CustomNavVC setDefaultNavgationItemTitle:@"实名认证"]];
    [self.navigationItem setLeftBarButtonItem:[[UIBarButtonItem alloc] initWithCustomView:[CustomNavVC getLeftDefaultButtonWithTarget:self action:@selector(onGoback)]]];
    
    self.imageDic = [[NSMutableDictionary alloc]init];
    
    [self dataS];
    
    [self tableV];
    
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardFrameWillChange:)
                                                 name:UIKeyboardWillChangeFrameNotification
                                               object:nil];
}

-(void)onGoback
{
    [self.navigationController popToRootViewControllerAnimated:YES];
}

-(NSMutableArray*)dataS
{
    if (!_dataS) {
        
        NSMutableArray *sec0 = [[NSMutableArray alloc]initWithArray:@[@{@"title":@"真实姓名",@"content":@"",@"placeholder":@"请填写身份证或护照姓名",@"type":@(AuthBasicTypeRealName)},
                                                                      @{@"title":@"出生日期",@"content":@"",@"placeholder":@"请选择出生日期",@"type":@(AuthBasicTypeBirth)},
                                                                      @{@"title":@"性别",@"content":@"",@"placeholder":@"请选择性别",@"type":@(AuthBasicTypeSex)},
                                                                      @{@"title":@"国籍",@"content":@"",@"placeholder":@"请选择国籍",@"type":@(AuthBasicTypeNationality)},
                                                                      @{@"title":@"有效证件号",@"content":@"",@"placeholder":@"请填写身份证/护照号",@"type":@(AuthBasicTypeCertificateNo)}]];
        
        NSMutableArray *sec1 = [[NSMutableArray alloc]initWithArray:@[@{@"desc":@"身份证/护照正面",@"image":@"auth_id_01"},@{@"desc":@"身份证/护照背面",@"image":@"auth_id_02"}]];
        
        _dataS=[[NSMutableArray alloc]initWithObjects:sec0,sec1, nil];
    }
    return _dataS;
}


- (TouchTableV *)tableV
{
    if(!_tableV)
    {
        _tableV = [[TouchTableV alloc] initWithFrame:CGRectMake(0,0,UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT) style:UITableViewStyleGrouped];
        _tableV.delegate = self;
        _tableV.dataSource = self;
        _tableV.touchDelegate=self;
        _tableV.separatorStyle=UITableViewCellSeparatorStyleNone;
        _tableV.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        [self.view addSubview:_tableV];
        _tableV.estimatedRowHeight = 0;
        _tableV.estimatedSectionHeaderHeight = 0;
        _tableV.estimatedSectionFooterHeight = 0;
        _tableV.backgroundColor=[UIColor clearColor];
        _tableV.tableFooterView=[self tableFootView];
    }
    return _tableV;
}

-(UIView*)tableFootView
{
    UIView *bg = [[UIView alloc]initWithFrame:CGRectMake(0,0, UI_SCREEN_WIDTH, 100)];
    
    UIButton *submitBtn=[UIButton buttonWithType:UIButtonTypeCustom];
    [bg addSubview:submitBtn];
    [submitBtn setBackgroundImage:[UIImage imageNamed:@"auth_next"] forState:UIControlStateNormal];
    [submitBtn setTitle:@"提交审核" forState:UIControlStateNormal];
    [submitBtn mas_makeConstraints:^(MASConstraintMaker *make) {
        make.centerY.mas_equalTo(bg);
        make.centerX.mas_equalTo(bg);
    }];
    [submitBtn addTarget:self action:@selector(submitAuth) forControlEvents:UIControlEventTouchUpInside];
    return bg;
}

#pragma mark -
#pragma mark - UITableViewDataSource&&UITableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return .1f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section==1) {
        return 50;
    }
    return .1f;
    
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return self.dataS.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [self.dataS[section] count];
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section==0) {
        return 48;
    }
    return UI_SCREEN_WIDTH*(418.0/750.0);
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section==0) {
        static NSString *identifer = @"AuthCellA";
        AuthCellA *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[AuthCellA alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
            
        }
        [cell reloadUIWithDic:self.dataS[indexPath.section][indexPath.row]];
        WeakSelf(self);
        cell.BeginEdit = ^{
            weakself.indexPath=indexPath;
        };
        cell.textFielChangeBlock = ^(NSString *text) {
            NSDictionary *dic = self.dataS[indexPath.section][indexPath.row];
            NSMutableArray *dataS = self.dataS[indexPath.section];
            NSDictionary *newDic = @{@"title":dic[@"title"],@"content":text,@"placeholder":dic[@"placeholder"],@"type":dic[@"type"]};
            [dataS replaceObjectAtIndex:indexPath.row withObject:newDic];
        };
        return cell;
    }
    else
    {
        static NSString *identifer = @"AuthCellB";
        AuthCellB *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[AuthCellB alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor clearColor];
            WeakSelf(self);
            cell.addPhotoBlock = ^{
                weakself.indexPath=indexPath;
                [weakself addCertificate];
            };
        }
        NSDictionary *dic = self.dataS[indexPath.section][indexPath.row];
        [cell reloadUIWithDic:dic];
        return cell;
    }

}

-(UIView*)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    if (section==1) {
        static NSString *identifer = @"UITableViewHeaderFooterView";
        UITableViewHeaderFooterView *headerView = [tableView dequeueReusableHeaderFooterViewWithIdentifier:identifer];
        if(!headerView)
        {
            headerView = [[UITableViewHeaderFooterView alloc] initWithReuseIdentifier:identifer];
            [headerView.backgroundView setBackgroundColor:[UIColor clearColor]];
            
            UILabel *titleLabel = [[UILabel alloc] init];
            titleLabel.tag=100;
            titleLabel.textColor =  [UIColor colorWithHexString:@"#999999"];
            titleLabel.font=[UIFont systemFontOfSize:12.0];
            [headerView addSubview:titleLabel];
            [titleLabel mas_makeConstraints:^(MASConstraintMaker *make) {
                make.centerX.mas_equalTo(headerView);
                make.bottom.mas_equalTo(headerView).offset(-10);
            }];
        }
        UILabel *titleLab = [headerView viewWithTag:100];
        titleLab.text=@"请上传您身份证/护照的正反面，用于实名认证";
        return headerView;
    }
    return nil;

}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section==0) {
        NSDictionary *dic = self.dataS [indexPath.section][indexPath.row];
        AuthBasicType type = [dic[@"type"] integerValue];
        WeakSelf(self);
        if (type==AuthBasicTypeBirth)
        {
            BirthSelectV *birthV = [[BirthSelectV alloc] init];
            birthV.didSelectDate = ^(NSString *dateStr){
                NSDictionary *dic = self.dataS[indexPath.section][indexPath.row];
                NSMutableArray *dataS = self.dataS[indexPath.section];
                NSDictionary *newDic = @{@"title":dic[@"title"],@"content":dateStr,@"placeholder":dic[@"placeholder"],@"type":dic[@"type"]};
                [dataS replaceObjectAtIndex:indexPath.row withObject:newDic];
                [weakself.tableV reloadRowsAtIndexPaths:[NSArray arrayWithObjects:indexPath,nil] withRowAnimation:UITableViewRowAnimationAutomatic];

            };
            [birthV showWithString:dic[@"content"] withType:DateTypeDay];
        }
        else if (type==AuthBasicTypeSex || type==AuthBasicTypeNationality)
        {
            NSArray *array = @[@"性别",@"国籍"];
            PublicPickerView *pickerV = [[PublicPickerView alloc] init];
            pickerV.title=array[type-3];
            pickerV.didSelectBlock = ^(NSString *select) {
                NSDictionary *dic = self.dataS[indexPath.section][indexPath.row];
                NSMutableArray *dataS = self.dataS[indexPath.section];
                NSDictionary *newDic = @{@"title":dic[@"title"],@"content":select,@"placeholder":dic[@"placeholder"],@"type":dic[@"type"]};
                [dataS replaceObjectAtIndex:indexPath.row withObject:newDic];
                [weakself.tableV reloadRowsAtIndexPaths:[NSArray arrayWithObjects:indexPath,nil] withRowAnimation:UITableViewRowAnimationAutomatic];
            };
            [pickerV showWithPickerType:type+7 withDesc:dic[@"content"]];
        }
    }
}

//提交审核
-(void)submitAuth
{
    NSArray *dataS = self.dataS[0];
    for (int i=0; i<dataS.count; i++) {
        if ([self.dataS[0][i][@"content"]length]<=0) {
            [SVProgressHUD showErrorWithStatus:[NSString stringWithFormat:@"请将%@填写完整～",self.dataS[0][i][@"title"]]];
            return;
        }
    }
    
    if (self.imageDic.count<2) {
        [SVProgressHUD showErrorWithStatus:@"请证件信息上传完整～"];
        return;
    }
    
    [SVProgressHUD showWithStatus:@"资料上传中，请稍等" maskType:SVProgressHUDMaskTypeClear];

    
    NSDictionary *dic=@{@"userid":[UserInfoManager getUserUID],
                        @"usertype":@([UserInfoManager getUserType]),
                        @"realname":self.dataS[0][0][@"content"],
                        @"birth":self.dataS[0][1][@"content"],
                        @"sex":[self.dataS[0][2][@"content"] isEqualToString:@"男"]?@(1):@(2),
                        @"nationality":self.dataS[0][3][@"content"],
                        @"papers":self.dataS[0][4][@"content"]};
    
    [AFWebAPI uploadAuthInfoWithArg:dic DataDic:self.imageDic callBack:^(BOOL success, id object) {
        if (success) {
            [SVProgressHUD showSuccessWithStatus:@"信息上传成功，请耐心等待审核结果！"];
            
            [UserInfoManager setUserAuthState:3];
            MyAuthStateVC *stateVC=[[MyAuthStateVC alloc]init];
            stateVC.authState=3;
            [self.navigationController pushViewController:stateVC animated:YES];
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
    
}


#pragma mark -
#pragma mark - TableVTouchDelegate
- (void)tableView:(UITableView *)tableView touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
{
    [self.view endEditing:YES];
}

-(void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
    [self.view endEditing:YES];
}

#pragma mark--keyboard Noti
- (void)keyboardFrameWillChange:(NSNotification*)notification
{
    CGRect rect = [notification.userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue];
    
    
    //当前Cell在屏幕中的坐标值
    CGRect rectInTableView = [self.tableV rectForRowAtIndexPath:self.indexPath];
    CGRect cellRect = [self.tableV convertRect:rectInTableView toView:[self.tableV superview]];
    
    if (rect.origin.y-120-cellRect.origin.y<0) {
        [self.tableV setContentOffset:CGPointMake(0,-rect.origin.y+cellRect.origin.y+120+self.tableV.contentOffset.y) animated:YES];
    }
    else
    {
        [self.tableV setContentOffset:CGPointMake(0, 0) animated:YES];
    }
}

//添加证件照
- (void)addCertificate
{
    UIAlertController *alert = [UIAlertController alertControllerWithTitle:nil
                                                                   message:nil
                                                            preferredStyle:UIAlertControllerStyleActionSheet];
    UIAlertAction *action0 = [UIAlertAction actionWithTitle:@"手机拍照" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        UIImagePickerControllerSourceType sourceType = UIImagePickerControllerSourceTypeCamera;
        if ([UIImagePickerController isSourceTypeAvailable: UIImagePickerControllerSourceTypeCamera])
        {
            UIImagePickerController *picker = [[UIImagePickerController alloc] init];
            picker.delegate = self;
            picker.allowsEditing = NO;
            picker.sourceType = sourceType;
            [self presentViewController:picker animated:YES completion:^{}];
        }
        else
        {}
    }];
    UIAlertAction *action1 = [UIAlertAction actionWithTitle:@"本地图片" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        UIImagePickerController *picker = [[UIImagePickerController alloc] init];
        
        picker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
        picker.delegate = self;
        picker.allowsEditing = NO;
        
        [self presentViewController:picker animated:YES completion:^{}];
    }];
    UIAlertAction *action2 = [UIAlertAction actionWithTitle:@"取消"
                                                      style:UIAlertActionStyleCancel
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                        [alert dismissViewControllerAnimated:YES completion:^{}];
                                                    }];
    
    [alert addAction:action0];
    [alert addAction:action1];
    [alert addAction:action2];
    
    dispatch_async(dispatch_get_main_queue(), ^{
        [self presentViewController:alert animated:YES completion:nil];
    });
}

#pragma mark -
#pragma mark - UIImagePickerControllerDelegate


-(void)imagePickerController:(UIImagePickerController*)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    NSString *type = [info objectForKey:UIImagePickerControllerMediaType];
    
    if ([type isEqualToString:@"public.image"])
    {
        UIImage* image = [info objectForKey:UIImagePickerControllerOriginalImage];
        AuthCellB *cell = [self.tableV cellForRowAtIndexPath:self.indexPath];
        cell.image=image;
        [self setValueToImage:image];
    }
    [picker dismissViewControllerAnimated:YES completion:^{}];
}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
{
    [picker dismissViewControllerAnimated:YES completion:^{}];
}

-(void)setValueToImage:(UIImage*)image
{
    NSInteger sec = self.indexPath.section;
    NSInteger row = self.indexPath.row;
    
    if (sec==1&&row==0) {
        [self.imageDic setObject:image forKey:@"papersphotourl1"];
    }
    else if (sec==1&&row==1)
    {
        [self.imageDic setObject:image forKey:@"papersphotourl2"];
        
    }
}




@end
