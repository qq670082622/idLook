//
//  PerformTypeVC.m
//  IDLook
//
//  Created by Mr Hu on 2018/9/19.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "PerformTypeVC.h"
#import "MyworksBottomV.h"
#import "PerformManager.h"
#import "WorkCellA.h"
#import "WorkCellB.h"
#import "UploadWorksVC.h"
#import "ModifyWorksVC.h"
#import "WorkNavView.h"
#import "PerformModel.h"
#import "ModelCardSliderV.h"
#import "ModelCardMainCell.h"
#import "UploadModelCardVC.h"
#import "VideoPlayer.h"

@interface PerformTypeVC ()<ModelCardSliderVDelegate,UIScrollViewDelegate>
{
    VideoPlayer *_player;
}
@property (nonatomic,strong)WorkNavView *navTitleV;
@property (nonatomic,strong)MyworksBottomV *bottomV;
@property (nonatomic,strong)PerformManager *manager;

@property (nonatomic,strong)UIScrollView *scrollV;
@property (nonatomic,strong)CustomCollectV *collectV;
@property (nonatomic,strong)UIScrollView *modelcardScrollV;
@property(nonatomic,strong)ModelCardSliderV *sliderView;

@property(nonatomic,strong)UIButton *addBtn;
@property (nonatomic,assign)NSInteger currIndex;
@property (nonatomic,strong)UIButton *rightBtn;
@property (nonatomic,strong)PerformModel *dataM;
@property (nonatomic,assign)NSInteger modelcardIndex;
@property(nonatomic,strong)UIView *bgV;

@end

@implementation PerformTypeVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor=Public_Background_Color;
    [self.navigationItem setTitleView:self.navTitleV];
    [self.navigationItem setLeftBarButtonItem:[[UIBarButtonItem alloc] initWithCustomView:[CustomNavVC getLeftDefaultButtonWithTarget:self action:@selector(onGoback)]]];
    
//    [self.navigationItem setRightBarButtonItem:[[UIBarButtonItem alloc]initWithCustomView:self.rightBtn]];
    
    [self.dataM refreshWorksInfo];
    [self scrollV];
    [self addBtn];
    [self bottomV];
    
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [_player destroyPlayer];
    _player = nil;
}

-(void)onGoback
{
    [self.navigationController popViewControllerAnimated:YES];
}

-(WorkNavView*)navTitleV
{
    if (!_navTitleV) {
        _navTitleV = [[WorkNavView alloc]initWithFrame:CGRectMake(0, 0,200, 44)];
        [_navTitleV initUIWithArray:@[@"试戏作品",@"模特卡"]];
        WeakSelf(self);
        _navTitleV.worksClickTypeBlock = ^(NSInteger type) {
            if (weakself.currIndex!=type) {
                //编辑状态不可点击
//                if (weakself.rightBtn.selected==YES) {
//                    return ;
//                }
                [weakself.scrollV setContentOffset:CGPointMake(UI_SCREEN_WIDTH*type, 0) animated:YES];
                weakself.currIndex=type;
                [weakself.navTitleV slideWithTag:type];
//                [weakself isShowRightBtn];
            }
        };
    }
    return _navTitleV;
}

-(PerformModel*)dataM
{
    if (!_dataM) {
        _dataM  = [[PerformModel alloc]init];
        WeakSelf(self);
        _dataM.refreshUIAction = ^(BOOL isAll) {
            if (isAll) {  //刷新全部collectionview
                [weakself reloadCollection];
                [weakself reloadModelCardUI];
            }
            else  //刷新一个
            {
                if (weakself.currIndex==0) {
                    [weakself reloadCollection];
                }
                else
                {
                    [weakself reloadModelCardUI];
                }
//                [weakself managerAction:weakself.rightBtn];
            }
//            [weakself isShowRightBtn];
        };
    }
    return _dataM;
}

//管理
-(void)managerAction:(UIButton*)sender
{
    sender.selected=!sender.selected;
    if (sender.selected) {
        if (self.currIndex==0) {
            self.bottomV.hidden=NO;
            self.scrollV.frame=CGRectMake(0, 10, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT-SafeAreaTopHeight-50-10);
            self.bottomV.allBtn.selected = [self.dataM isAllChoose];
        }
        else
        {
            self.sliderView.isEdit=YES;
        }
        self.addBtn.hidden=YES;

    }
    else
    {
        if (self.currIndex==0) {
            self.bottomV.hidden=YES;
            self.scrollV.frame=CGRectMake(0, 10, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT-SafeAreaTopHeight-10);
        }
        else
        {
            self.sliderView.isEdit=NO;
        }
        self.addBtn.hidden=NO;
    }
    
    if (self.currIndex==0) {
        [self.dataM allChooseWithSelect:NO];
        [self.dataM getEditStateWithEdit:sender.selected];
        [self.collectV reloadData];
    }
}

-(UIButton*)rightBtn
{
    if (!_rightBtn) {
        _rightBtn = [UIButton buttonWithType:UIButtonTypeCustom];
        _rightBtn.frame = CGRectMake(0, 0, 48, 48);
        [_rightBtn setTitle:@"管理" forState:UIControlStateNormal];
        [_rightBtn setTitle:@"完成" forState:UIControlStateSelected];
        _rightBtn.titleLabel.font=[UIFont systemFontOfSize:15.0];
        [_rightBtn setTitleColor:Public_Text_Color forState:UIControlStateNormal];
        [_rightBtn addTarget:self action:@selector(managerAction:) forControlEvents:UIControlEventTouchUpInside];
    }
    return _rightBtn;
}


-(MyworksBottomV*)bottomV
{
    if (!_bottomV) {
        _bottomV=[[MyworksBottomV alloc]init];
        [self.view addSubview:_bottomV];
        [_bottomV mas_makeConstraints:^(MASConstraintMaker *make) {
            make.bottom.mas_equalTo(self.view);
            make.left.mas_equalTo(self.view);
            make.right.mas_equalTo(self.view);
            make.height.mas_equalTo(50);
        }];
        _bottomV.hidden=YES;
        WeakSelf(self);
        _bottomV.chooseAllBlock = ^(BOOL select) { //全选，取消
            [weakself.dataM allChooseWithSelect:select];
            [weakself.collectV reloadData];
        };
        _bottomV.delectBlock = ^{    //删除
            [weakself delectAction];
        };
    }
    return _bottomV;
}

-(UIButton*)addBtn
{
    if (!_addBtn) {
        _addBtn=[UIButton buttonWithType:UIButtonTypeCustom];
        [_addBtn setBackgroundImage:[UIImage imageNamed:@"works_add_btn"] forState:UIControlStateNormal];
        [self.view addSubview:_addBtn];
        [_addBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.centerX.mas_equalTo(self.view);
            make.bottom.mas_equalTo(self.view);
        }];
        [_addBtn addTarget:self action:@selector(addworks) forControlEvents:UIControlEventTouchUpInside];
    }
    return _addBtn;
}

-(PerformManager*)manager
{
    if (!_manager) {
        _manager=[[PerformManager alloc]init];
        _manager.dataM=self.dataM;
        WeakSelf(self);
        _manager.chooseAction = ^(BOOL select, NSIndexPath *indexPath) {
            [weakself.dataM changeoneDataWithIndaxPath:indexPath withSelect:select];
            [weakself.collectV reloadData];
            weakself.bottomV.allBtn.selected = [weakself.dataM isAllChoose];
        };
        _manager.playAction = ^(WorksModel *model) {
            [weakself lookWorksWithInfo:model];
        };
        _manager.lookModelcardPhoto = ^(NSArray * _Nonnull imageArray) {
            [weakself lookModelcardPhotoWitArray:imageArray];
        };
        _manager.playVideWithUrl = ^(NSString * _Nonnull videoUrl) {
            [weakself lookModelcardVideo:videoUrl];
        };
    }
    return _manager;
}

- (UIScrollView *)scrollV
{
    if(!_scrollV)
    {
        _scrollV = [[UIScrollView alloc] initWithFrame:CGRectMake(0,10, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT-SafeAreaTopHeight-10)];
        _scrollV.pagingEnabled=YES;
        _scrollV.scrollEnabled = NO;
        _scrollV.tag=100;
        _scrollV.backgroundColor = [UIColor whiteColor];
        _scrollV.showsHorizontalScrollIndicator = YES;
        _scrollV.showsVerticalScrollIndicator = NO;
        [self.view addSubview:_scrollV];
        _scrollV.contentSize = CGSizeMake(UI_SCREEN_WIDTH*2, 0);
        
        UICollectionViewFlowLayout *flowLayout=[[UICollectionViewFlowLayout alloc] init];
        [flowLayout setScrollDirection:UICollectionViewScrollDirectionVertical];
        
        CustomCollectV *collectV = [[CustomCollectV alloc] initWithFrame:CGRectMake(0, 0, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT-SafeAreaTopHeight)
                                                    collectionViewLayout:flowLayout];
        collectV.dataSource=self.manager;
        collectV.delegate=self.manager;
        collectV.tag=101;
        [collectV setBackgroundColor:[UIColor clearColor]];
        
        [collectV registerClass:[WorkCellA class] forCellWithReuseIdentifier:@"WorkCellA"];
        [collectV registerClass:[UICollectionReusableView class] forSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:@"headView"];
        [_scrollV addSubview:collectV];
        self.collectV=collectV;
        
        ModelCardSliderV *sliderView =[[ModelCardSliderV alloc] initWithFrame:CGRectMake(UI_SCREEN_WIDTH, 0, UI_SCREEN_WIDTH, 55)];
        sliderView.delegate=self;
        [_scrollV addSubview:sliderView];
        sliderView.backgroundColor=[UIColor clearColor];
        self.sliderView=sliderView;
        
        UIScrollView *modelcardScrollV = [[UIScrollView alloc] initWithFrame:CGRectMake(UI_SCREEN_WIDTH,60, UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT-SafeAreaTopHeight)];
        modelcardScrollV.pagingEnabled=YES;
        modelcardScrollV.tag=102;
        modelcardScrollV.delegate=self;
        modelcardScrollV.backgroundColor = [UIColor whiteColor];
        modelcardScrollV.showsHorizontalScrollIndicator = NO;
        modelcardScrollV.showsVerticalScrollIndicator = NO;
        [_scrollV addSubview:modelcardScrollV];
        self.modelcardScrollV=modelcardScrollV;
        [self bgV];
    }
    return _scrollV;
}

//是否显示管理按钮
-(void)isShowRightBtn
{
    if ([self.dataM.ds[self.currIndex]count]==0) {
//        [self.navigationItem setRightBarButtonItem:nil];
    }
    else
    {
//        [self.navigationItem setRightBarButtonItem:[[UIBarButtonItem alloc]initWithCustomView:self.rightBtn]];
    }
}

//刷新试戏作品
-(void)reloadCollection
{
    
    if ([self.dataM.ds[0]count]==0) {
        NSLog(@"show");
        [self.collectV showWithNoDataType:NoDataTypeWorks];
    }
    else
    {
        NSLog(@"hide");
        [self.collectV hideNoDataScene];
    }
    [self.collectV reloadData];
}

//刷新模特卡
-(void)reloadModelCardUI
{
     NSArray *dataS = self.dataM.ds[1];
    NSMutableArray *arr = [[NSMutableArray alloc]initWithCapacity:0];
    for (int i = 0; i<dataS.count; i++) {
        NSDictionary *dic = dataS[i];
        [arr addObject:dic[@"name"]];
    }
    self.sliderView.typeViewArray = arr;
    
    for (UIView *view in self.modelcardScrollV.subviews) {
        [view removeFromSuperview];
    }
    
    if (dataS.count==0) {
        self.bgV.hidden=NO;
    }
    else
    {
        self.bgV.hidden=YES;
    }
    
    self.modelcardScrollV.contentSize = CGSizeMake(UI_SCREEN_WIDTH*dataS.count,0);
    for (int i =0; i<dataS.count; i++) {
        CustomTableV *tableV = [[CustomTableV alloc] initWithFrame:CGRectMake(UI_SCREEN_WIDTH*i,0,UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT-SafeAreaTopHeight-60) style:UITableViewStylePlain];
        tableV.delegate = self.manager;
        tableV.dataSource = self.manager;
        tableV.tag=1000+i;
        tableV.bounces=YES;
        tableV.separatorStyle=UITableViewCellSeparatorStyleNone;
        tableV.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        [self.modelcardScrollV addSubview:tableV];
        tableV.estimatedRowHeight = 0;
        tableV.estimatedSectionHeaderHeight = 0;
        tableV.estimatedSectionFooterHeight = 0;
        tableV.backgroundColor=[UIColor clearColor];
    }
}

//查看作品
-(void)lookWorksWithInfo:(WorksModel*)model
{
    ModifyWorksVC *lookVC=[[ModifyWorksVC alloc]init];
    lookVC.model=model;
    WeakSelf(self);
    lookVC.saveRefreshUI = ^{
        [weakself.dataM refreshWorksInfo];
    };
    [self.navigationController pushViewController:lookVC animated:YES];
}

//查看模特卡图片
-(void)lookModelcardPhotoWitArray:(NSArray*)array
{
    CustomTableV *tableV = [self getCurrentTableViewWithTag:self.modelcardIndex];
    ModelCardMainCell *cell = [tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0]];
    NSLog(@"%@",NSStringFromCGRect(cell.frame));
    
    LookBigImageVC *lookImage=[[LookBigImageVC alloc]init];
    [lookImage showWithImageArray:array curImgIndex:self.modelcardIndex AbsRect:CGRectMake(0, 0, 0, 0)];
    [self.navigationController pushViewController:lookImage animated:YES];
}

-(void)lookModelcardVideo:(NSString*)url
{
    [_player destroyPlayer];
    _player = nil;
    
    CustomTableV *tableV = [self getCurrentTableViewWithTag:self.modelcardIndex];
    ModelCardMainCell *cell = [tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:1 inSection:0]];
    
    _player = [[VideoPlayer alloc] init];
    _player.layer.masksToBounds=YES;
    _player.layer.cornerRadius=5.0;
    _player.videoUrl =url;
    
    [_player playerBindTableView:tableV currentIndexPath:[NSIndexPath indexPathForRow:1 inSection:0]];
    _player.frame = CGRectMake(15, 10, cell.bounds.size.width-30, cell.bounds.size.height-20);
    
    [cell.contentView addSubview:_player];
    
    _player.completedPlayingBlock = ^(VideoPlayer *player) {
        [player destroyPlayer];
        _player = nil;
    };
    
}

#pragma mark----Action
//添加新作品
-(void)addworks
{
    if (self.currIndex==0) {
        UploadWorksVC *uploadVC = [[UploadWorksVC alloc]init];
        uploadVC.type=WorkTypesPerformance;
        WeakSelf(self);
        uploadVC.saveRefreshUI = ^{
            [weakself.dataM refreshWorksInfo];
        };
        [self.navigationController pushViewController:uploadVC animated:YES];
    }
    else
    {
        UploadModelCardVC *uploadVC=[[UploadModelCardVC alloc]init];
        WeakSelf(self);
        uploadVC.saveRefreshUI = ^(NSArray *array) {
            [weakself.dataM refreshWorksInfo];
        };
        [self.navigationController pushViewController:uploadVC  animated:YES];
    }

}

//删除
-(void)delectAction
{
    if (self.dataM.selectDatasource.count==0) {
        [SVProgressHUD showErrorWithStatus:@"请选择要删除的作品"];
        return;
    }
    
    UIAlertController *alert=[UIAlertController alertControllerWithTitle:@"删除" message:@"确定要删除作品吗？" preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *action0 = [UIAlertAction actionWithTitle:@"确认"
                                                      style:UIAlertActionStyleDestructive
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                        [self delectWorks];
                                                    }];
    UIAlertAction *action1 = [UIAlertAction actionWithTitle:@"取消"
                                                      style:UIAlertActionStyleCancel
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                    }];
    [alert addAction:action0];
    [alert addAction:action1];
    [self presentViewController:alert animated:YES completion:^{}];
}

//确认删除
-(void)delectWorks
{
    [SVProgressHUD showWithMaskType:SVProgressHUDMaskTypeClear];
    [self.dataM delectTalent];
}

#pragma mark---ModelCardSliderVDelegate
-(void)clickTypeViewWithIndex:(NSInteger)index  //点击标签
{
    self.modelcardIndex=index;
    [self.modelcardScrollV setContentOffset:CGPointMake(UI_SCREEN_WIDTH*index, 0) animated:YES];
}

-(void)delectWithIndex:(NSInteger)index
{
    UIAlertController *alert=[UIAlertController alertControllerWithTitle:@"删除" message:@"确定要删除该模特卡吗？" preferredStyle:UIAlertControllerStyleAlert];
    UIAlertAction *action0 = [UIAlertAction actionWithTitle:@"确认"
                                                      style:UIAlertActionStyleDestructive
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                        [SVProgressHUD showWithMaskType:SVProgressHUDMaskTypeClear];
                                                        [self.dataM delectModelCardWithIndex:index];
                                                    }];
    UIAlertAction *action1 = [UIAlertAction actionWithTitle:@"取消"
                                                      style:UIAlertActionStyleCancel
                                                    handler:^(UIAlertAction * _Nonnull action) {
                                                    }];
    [alert addAction:action0];
    [alert addAction:action1];
    [self presentViewController:alert animated:YES completion:^{}];
}

-(void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
    if(scrollView.tag==102)
    {
        int curePage = (int) scrollView.contentOffset.x / UI_SCREEN_WIDTH;
        
        self.modelcardIndex = curePage;
        
        [self.sliderView moveSliderToPage:curePage];
        
        [_player destroyPlayer];
        _player = nil;
        
    }
}

//根据tag等到tableView
-(CustomTableV*)getCurrentTableViewWithTag:(NSInteger)tag
{
    CustomTableV *tableV=[self.modelcardScrollV viewWithTag:1000+tag];
    return tableV;
}


#pragma mark--无数据时背景图
-(UIView*)bgV
{
    if (!_bgV) {
        _bgV=[[UIView alloc]initWithFrame:CGRectMake(UI_SCREEN_WIDTH, 0, UI_SCREEN_WIDTH, UI_SCREEN_HEIGHT)];
        [self.scrollV addSubview:_bgV];
        
        UIImageView *imageView=[[UIImageView alloc]init];
        [_bgV addSubview:imageView];
        [imageView mas_makeConstraints:^(MASConstraintMaker *make) {
            make.centerX.mas_equalTo(_bgV);
            make.bottom.mas_equalTo(_bgV.mas_centerY).offset(-50);
        }];
        imageView.image=[UIImage imageNamed:@"nodata_works"];
        
        UILabel *desc=[[UILabel alloc]init];
        [_bgV addSubview:desc];
        desc.font=[UIFont systemFontOfSize:14.0];
        desc.textColor=[UIColor colorWithHexString:@"#999999"];
        [desc mas_makeConstraints:^(MASConstraintMaker *make) {
            make.centerX.mas_equalTo(_bgV);
            make.top.mas_equalTo(imageView.mas_bottom).offset(15);
        }];
        desc.text=@"暂无模特卡";
        _bgV.hidden=YES;
    }
    return _bgV;
}

@end
