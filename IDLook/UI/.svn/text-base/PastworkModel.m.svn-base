//
//  PastworkModel.m
//  IDLook
//
//  Created by Mr Hu on 2018/9/20.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "PastworkModel.h"

@implementation PastworkModel

-(id)init
{
    if (self=[super init]) {
        
    }
    return self;
}

- (NSMutableArray *)ds
{
    if(!_ds)
    {
        _ds = [[NSMutableArray alloc]initWithObjects:@[],@[], nil];
    }
    return _ds;
}

- (NSMutableArray *)selectDatasource
{
    if(!_selectDatasource)
    {
        _selectDatasource = [NSMutableArray new];
    }
    return _selectDatasource;
}

-(void)refreshWorksInfo
{
    
    [SVProgressHUD showWithMaskType:SVProgressHUDMaskTypeClear];
    NSDictionary *dicArg=@{@"userid":[UserInfoManager getUserUID],
                           @"type":@"5"
                           };
    
    [AFWebAPI getWorksModelcardMirrorList:dicArg callBack:^(BOOL success, id object) {
        if (success) {
            [SVProgressHUD dismiss];
            
            [self analyzeDataWithDic:[object objectForKey:JSON_data]];
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
    
}

-(void)analyzeDataWithDic:(NSDictionary*)dic
{
    [self.ds removeAllObjects];
    
    NSMutableArray *sec0 = [NSMutableArray new];
    NSMutableArray *sec1 = [NSMutableArray new];
    {
        NSArray *pastWorksPhotoArray= dic[@"pastWorksImg"];
        NSArray *pastWorksVideoArray= dic[@"pastWorksVdo"];

        for (int i = 0 ;i<pastWorksPhotoArray.count; i++)
        {
            WorksModel *model = [[WorksModel alloc]initWithPastWorkDic:pastWorksPhotoArray[i]];
            [sec0 addObject:model];
        }
        
        for (int i = 0 ;i<pastWorksVideoArray.count; i++)
        {
            WorksModel *model = [[WorksModel alloc]initWithPastWorkDic:pastWorksVideoArray[i]];
            [sec1 addObject:model];
        }
    }
    
    [self.ds addObject:sec0];
    [self.ds addObject:sec1];
    if (self.refreshUIAction) {
        self.refreshUIAction(YES);
    }
}


//删除过往作品
-(void)delectWorksWithType:(NSInteger)type
{
    //遍历得到id数组
    NSArray *array = self.selectDatasource;
    NSMutableArray *idArr = [[NSMutableArray alloc]initWithCapacity:0];
    for (int i = 0; i<array.count; i++) {
        WorksModel *model =array[i];
        [idArr addObject:model.creativeid];
    }
    NSString *idStr = [idArr componentsJoinedByString:@","];
    
    NSDictionary *dicArg = @{@"userid":[UserInfoManager getUserUID],
                             @"creativeid":idStr};
    [AFWebAPI delectPastWorkAndTalWithArg:dicArg callBack:^(BOOL success, id object) {
        if (success) {
            [SVProgressHUD showSuccessWithStatus:@"删除成功"];
            
            NSDictionary *dic = (NSDictionary*)safeObjectForKey(object, JSON_data);
            [self analyzeDelectDataWithDic:dic withType:type];
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
}

-(void)analyzeDelectDataWithDic:(NSDictionary*)dic withType:(NSInteger)type
{
    NSArray *dataS =[NSArray array];
    NSArray *pastWorksPhotoArray= dic[@"pastWorksImg"];
    NSArray *pastWorksVideoArray= dic[@"pastWorksVdo"];
    
    NSMutableArray *array1 = [[NSMutableArray alloc]initWithCapacity:0];
    NSMutableArray *array2 = [[NSMutableArray alloc]initWithCapacity:0];
    
    for (int i = 0 ;i<pastWorksPhotoArray.count; i++)
    {
        WorksModel *model = [[WorksModel alloc]initWithPastWorkDic:pastWorksPhotoArray[i]];
        model.type=@"图片";
        [array1 addObject:model];
    }
    
    for (int i = 0 ;i<pastWorksVideoArray.count; i++)
    {
        WorksModel *model = [[WorksModel alloc]initWithPastWorkDic:pastWorksVideoArray[i]];
        model.type=@"视频";
        [array2 addObject:model];
    }
    
    if (type==0) {
        dataS=array1;
    }
    else
    {
        dataS=array2;
    }
    
    [self.ds replaceObjectAtIndex:type withObject:dataS];
    
    if (self.refreshUIAction) {
        self.refreshUIAction(NO);
    }
}


//编辑状态
-(void)getEditStateWithTag:(NSInteger)tag withEdit:(BOOL)edit
{
    NSMutableArray *array = [[NSMutableArray alloc]initWithArray:self.ds[tag]];
    for (int i = 0 ; i<array.count; i++) {
        WorksModel *model = (WorksModel*)array[i];
        model.isEdit=edit;
    }
}

//全选,取消
-(void)allChooseWithTag:(NSInteger)tag withSelect:(BOOL)select
{
    [self.selectDatasource removeAllObjects];
    
    NSMutableArray *array = [[NSMutableArray alloc]initWithArray:self.ds[tag]];
    
    for (int i = 0 ; i<array.count; i++)
    {
        WorksModel *model = (WorksModel*)array[i];
        model.isSelect=select;
        if (select) {
            [self.selectDatasource addObject:model];
        }
    }
}

//改变一条数据
-(void)changeoneDataWithTag:(NSInteger)tag withIndaxPath:(NSIndexPath*)indexPath withSelect:(BOOL)select
{
    NSMutableArray *array = [[NSMutableArray alloc]initWithArray:self.ds[tag]];
    WorksModel *model = (WorksModel*)array[indexPath.row];
    model.isSelect=select;
    if (select) {
        [self.selectDatasource addObject:model];
    }
    else
    {
        if ([self.selectDatasource containsObject:model]) {
            [self.selectDatasource removeObject:model];
        }
    }
}

//是否全选中
-(BOOL)isAllChooseWithTag:(NSInteger)tag
{
    NSMutableArray *array = [[NSMutableArray alloc]initWithArray:self.ds[tag]];
    for (int i = 0 ; i<array.count; i++) {
        WorksModel *model = (WorksModel*)array[i];
        if (model.isSelect==NO) {
            return NO;
        }
    }
    return YES;
}
@end
