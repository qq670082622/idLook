//
//  PlaceShotOrderVC.m
//  IDLook
//
//  Created by Mr Hu on 2018/10/16.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "PlaceShotOrderVC.h"
#import <Photos/Photos.h>
#import "TZImagePickerController.h"
#import "PlaceOrderCustomCell.h"
#import "PlaceOrderHeadV.h"
#import "BirthSelectV.h"
#import "PlaceOrderCellB.h"
#import "PlaceAuditCellB.h"
#import "PlaceAuditCellC.h"
#import "PlaceAuditCellD.h"
#import "PlaceAuditCellE.h"
#import "EditStructM.h"
#import "CenterCustomCell.h"
#import "PriceBottomVB.h"
#import "PublicWebVC.h"
#import "OfferTypePopV.h"
#import "PriceModel.h"
#import "CitySelectStep1.h"
#import "OrderPickerPopV.h"
#import "ShotStepCellB.h"
#import "ShotStepCellC.h"
#import "ShotStepCellD.h"
#import "ShotStepCellE.h"
#import "ShotPriceDPopV.h"
#import "AddPriceModel.h"
#import "DatePickPopV.h"
#import "PayWaysVC.h"
#import "DayExplainPopV.h"

@interface PlaceShotOrderVC ()<UITableViewDelegate,UITableViewDataSource,UIImagePickerControllerDelegate,UINavigationControllerDelegate,TableVTouchDelegate,PlaceAuditCellECDelegate,TZImagePickerControllerDelegate>
@property(nonatomic,strong)TouchTableV *tableV;
@property(nonatomic,strong)NSMutableArray *dataSource;
@property(nonatomic,strong)NSIndexPath *indexPath;
@property(nonatomic,strong)PriceBottomVB *bottomV;
@property(nonatomic,strong)NSMutableArray *photoArray;    //脚本，图片数组
@property(nonatomic,strong)NSMutableArray *selectedAssets; //脚本，图片数组


@property(nonatomic,assign)NSInteger dayPrice;   //天数报价
@property(nonatomic,assign)NSInteger totalPrice;   //总价
@property(nonatomic,assign)NSInteger salePrice;   //优惠价格
@property(nonatomic,strong)NSArray *dayPriceLsit;   //天数报价列表，每一天的报价
@property(nonatomic,strong)NSArray *priceList;
@property(nonatomic,assign)NSInteger showWay;     //演出方式 ，0:平面影棚。 1:自备场地

@end

@implementation PlaceShotOrderVC
-(void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self
                                                    name:UIKeyboardWillChangeFrameNotification
                                                  object:nil];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor=Public_Background_Color;
    
    [self.navigationItem setTitleView:[CustomNavVC setDefaultNavgationItemTitle:@"拍摄下单"]];
    
    [self.navigationItem setLeftBarButtonItem:[[UIBarButtonItem alloc] initWithCustomView:[CustomNavVC getLeftDefaultButtonWithTarget:self action:@selector(onGoback)]]];
    
    self.photoArray = [[NSMutableArray alloc]initWithCapacity:0];
    self.selectedAssets=[[NSMutableArray alloc]initWithCapacity:0];
    
    [self getData];
    [self bottomV];
    [self reloadUIWithWay];
    
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardFrameWillChange:)
                                                 name:UIKeyboardWillChangeFrameNotification
                                               object:nil];
}

-(void)onGoback
{
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)getData
{
    self.dataSource =[[NSMutableArray alloc]initWithCapacity:0];
    
    [self.dataSource addObject:@[self.info]];   //拍摄艺人
    [self.dataSource addObject:[PlaceOrderModel getShotWay]];    //定妆
    
    NSDictionary *dic = @{@"title":@"报价类别",@"placeholder":@"请选择报价类别",@"isEdit":@(NO)};
    OrderStructM *model = [[OrderStructM alloc]initWithDic:dic];
    model.content=self.advName;
    [self.dataSource addObject:@[model]];           //报价类别
    
    [self.dataSource addObject:@[@""]];           //项目简介
    [self.dataSource addObject:@[@""]];           //脚本
    [self.dataSource addObject:[PlaceOrderModel getShotTypes]];    //基本内容
    [self.dataSource addObject:@[@""]];           //保险
    
    NSDictionary *dicArg = @{@"userid":[UserInfoManager getUserUID],
                             @"artistid":self.info.UID};
    [AFWebAPI getUserInfoWithArg:dicArg callBack:^(BOOL success, id object) {
        if (success) {
            self.info = [[UserInfoM alloc]initWithDic:[object objectForKey:JSON_data]];
            [self.tableV reloadRowsAtIndexPaths:[NSArray arrayWithObjects:[NSIndexPath indexPathForRow:0 inSection:0],[NSIndexPath indexPathForRow:0 inSection:5],nil] withRowAnimation:UITableViewRowAnimationAutomatic];
//            [self.tableV reloadData];
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
    
    NSDictionary *dicArg2 = @{@"buyerid":[UserInfoManager getUserUID]};
    [AFWebAPI getIsFirstOrderWithArg:dicArg2 callBack:^(BOOL success, id object) {
        if (success) {
            NSDictionary *dicA = [object objectForKey:JSON_data];
            if ([dicA[@"haveorder"] integerValue]==0)//第一次下单
            {
                NSDictionary *dic1 = @{@"title":@"推荐人",@"placeholder":@"请输入推荐人手机号",@"isEdit":@(YES)};
                OrderStructM *model1 = [[OrderStructM alloc]initWithDic:dic1];
                
                [self.dataSource insertObject:@[model1] atIndex:self.dataSource.count-1];           //推荐人
                [self.tableV reloadData];
            }
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
    
    if (self.model==nil) {
        return;
    }
    
    OrderStructM *model1 = self.dataSource[5][0];
    OrderStructM *model2 = self.dataSource[5][1];
    OrderStructM *model3 = self.dataSource[5][2];
    model1.content=[NSString stringWithFormat:@"%ld天",self.model.shootdays];
    model2.content = self.model.shootplace;
    model3.content = self.model.shoottime;
    model3.desc = self.model.shoottimeend;

    [self.dataSource replaceObjectAtIndex:3 withObject:@[self.model.projectdesc]];

}

-(TouchTableV*)tableV
{
    if (!_tableV) {
        _tableV = [[TouchTableV alloc] initWithFrame:CGRectMake(0,0,UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT-SafeAreaTabBarHeight_IphoneX-60) style:UITableViewStyleGrouped];
        _tableV.delegate = self;
        _tableV.dataSource = self;
        _tableV.touchDelegate=self;
        _tableV.showsVerticalScrollIndicator=NO;
        _tableV.showsHorizontalScrollIndicator=NO;
        _tableV.separatorStyle=UITableViewCellSeparatorStyleNone;
        _tableV.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        [self.view addSubview:_tableV];
        _tableV.estimatedRowHeight = 0;
        _tableV.estimatedSectionHeaderHeight = 0;
        _tableV.estimatedSectionFooterHeight = 0;
        _tableV.backgroundColor=[UIColor clearColor];
        _tableV.tableFooterView=[self footV];
    }
    return _tableV;
}

-(PriceBottomVB*)bottomV
{
    if (!_bottomV) {
        _bottomV=[[PriceBottomVB alloc]init];
        [self.view addSubview:_bottomV];
        [_bottomV mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.mas_equalTo(self.view);
            make.right.mas_equalTo(self.view);
            make.bottom.mas_equalTo(self.view).offset(-SafeAreaTabBarHeight_IphoneX);
            make.height.mas_equalTo(59.5);
        }];
        WeakSelf(self);
        _bottomV.placeOrderBlock  = ^{
            OrderStructM *model = weakself.dataSource[1][weakself.showWay];
            ShotPriceDPopV *popV=[[ShotPriceDPopV alloc]init];
            [popV showWithLoad:NO withModel:model withTotal:[NSString stringWithFormat:@"%ld",weakself.totalPrice] withType:weakself.showWay withSale:weakself.salePrice];
            
            [weakself placeOrderAction];
        };
        _bottomV.praceDetailBlock = ^{
            OrderStructM *model = weakself.dataSource[1][weakself.showWay];
            ShotPriceDPopV *popV=[[ShotPriceDPopV alloc]init];
            [popV showWithLoad:YES withModel:model withTotal:[NSString stringWithFormat:@"%ld",weakself.totalPrice] withType:weakself.showWay withSale:weakself.salePrice];
        };
    }
    return _bottomV;
}

-(UIView*)footV
{
    UIView *footV=[[UIView alloc]initWithFrame:CGRectMake(0, 0, UI_SCREEN_WIDTH, 60)];
    UILabel *lab = [[UILabel alloc] init];
    lab.font = [UIFont systemFontOfSize:13.0];
    lab.textColor = [UIColor colorWithHexString:@"#999999"];
    lab.text=@"售前咨询电话：";
    [footV addSubview:lab];
    [lab mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(footV).offset(15);
        make.top.mas_equalTo(footV).offset(15);
    }];
    
    UIButton *phone = [UIButton buttonWithType:UIButtonTypeCustom];
    [phone setTitle:@"400 833 6969" forState:UIControlStateNormal];
    [phone setTitleColor:[UIColor colorWithHexString:@"#75BDFF"] forState:UIControlStateNormal];
    phone.titleLabel.font=[UIFont systemFontOfSize:13.0];
    [footV addSubview:phone];
    [phone mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.mas_equalTo(lab.mas_right).offset(5);
        make.centerY.mas_equalTo(lab).offset(0);
    }];
    [phone addTarget:self action:@selector(takePhone) forControlEvents:UIControlEventTouchUpInside];
    return footV;
}

//打电话
-(void)takePhone
{
    NSMutableString * str=[[NSMutableString alloc] initWithFormat:@"telprompt:%@",@"400-833-6969"];
    dispatch_async(dispatch_get_global_queue(0, 0), ^{
        [[UIApplication sharedApplication] openURL:[NSURL URLWithString:str]];
    });
}

#pragma mark -
#pragma mark - UITableViewDataSource&&UITableViewDelegate

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return .1f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section==0) {
        return 40.f;
    }
    else if (section==3||section==4)
    {
        return 50.f;
    }
    return 10.f;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return self.dataSource.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{

    return [self.dataSource[section] count];
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section==0) {
        return 80;
    }
    else if (indexPath.section==1)
    {
        return 75;
    }
    else if (indexPath.section==3)
    {
        return 150;
    }
    else if (indexPath.section==4)
    {
        CGFloat height ;
        if(self.photoArray.count<9)
        {
            height=30+(ScriptSubCellWidth+10)*((self.photoArray.count)/3+1);
        }
        else
        {
            height =30+(ScriptSubCellWidth+10)*3;
        }
        return height;
    }
    else if ((indexPath.section==5 && indexPath.row==0) && self.info.internalagenttype==1)
    {
        return 70;
    }
    return 48;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSInteger sec= indexPath.section;
    NSInteger row = indexPath.row;
    
    if (sec==0) {
        static NSString *identifer = @"PlaceAuditCellC";
        PlaceAuditCellC *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[PlaceAuditCellC alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
        }
        [cell reloadUIWithInfo:self.info];
        return cell;
    }
    else if (sec==1)
    {
        static NSString *identifer = @"ShotStepCellB";
        ShotStepCellB *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[ShotStepCellB alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
        }
        [cell reloadUIWithModel:self.dataSource[sec][row] withRow:row];
        return cell;
    }
    else if (sec==3)
    {
        static NSString *identifer = @"PlaceOrderCellB";
        PlaceOrderCellB *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[PlaceOrderCellB alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
          
        }
        NSString *placeholder=@"请填写项目简介";
        [cell reloadUIWithPlaceholder:placeholder withText:self.dataSource[sec][row]];
        WeakSelf(self);
        cell.textFieldChangeBlock = ^(NSString *text) {
            [weakself.dataSource replaceObjectAtIndex:indexPath.section withObject:@[text]];
        };
        cell.BeginEdit = ^{
            weakself.indexPath=indexPath;
        };
        return cell;
    }
    else if (sec==4)
    {
        static NSString *identifer = @"PlaceOrderCellE";
        PlaceAuditCellE *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[PlaceAuditCellE alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
        }
        cell.delegate=self;
        [cell reloadUIWithArray:self.photoArray withAssets:self.selectedAssets];
        return cell;
    }
    else if (sec==2||sec==5)
    {
        OrderStructM *model=self.dataSource[sec][row];
        if (sec==5 && row==2) {
            static NSString *identifer = @"ShotStepCellC";
            ShotStepCellC *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
            if(!cell)
            {
                cell = [[ShotStepCellC alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                cell.backgroundColor=[UIColor whiteColor];
            }
            [cell reloadUIWithModel:model];
            WeakSelf(self);
            cell.dateSelectWithType = ^(NSInteger type) {
                OrderStructM *model1 = weakself.dataSource[5][0];
                if (type==0) {
                    if (model1.content.length==0) {
                        [SVProgressHUD showImage:nil status:@"请先选择报价天数"];
                        return ;
                    }
                    
                    NSDate *minimumDate = [NSDate date];
                    NSDate *maximumDate = [NSDate dateWithTimeIntervalSinceNow:(24*3600*365*2)];
                    DatePickPopV *popV = [[DatePickPopV alloc]init];
                    [popV showWithMinDate:minimumDate maxDate:maximumDate];
                    popV.dateString = ^(NSString * _Nonnull str) {
                        model.content=str;
                        [tableView reloadRowsAtIndexPaths:[NSArray arrayWithObjects:indexPath, nil] withRowAnimation:UITableViewRowAnimationAutomatic];

                    };
                }
                else
                {
                    NSDate *minimumDate = [PublicManager dateFromString1:model.content];
                    if (minimumDate==nil) {
                        [SVProgressHUD showImage:nil status:@"请先选择开始日期"];
                        return ;
                    }
                    NSInteger shotDay=0;
                    if (model1.content.length==2) {
                        NSString *strss=[model1.content substringToIndex:1];
                        shotDay=[strss integerValue];
                    }
                    
                    NSDate *maximumDate = [minimumDate dateByAddingTimeInterval:24*3600*(shotDay+2)];
                    DatePickPopV *popV = [[DatePickPopV alloc]init];
                    [popV showWithMinDate:minimumDate maxDate:maximumDate];
                    popV.dateString = ^(NSString * _Nonnull str) {
                        model.desc=str;
                        [tableView reloadRowsAtIndexPaths:[NSArray arrayWithObjects:indexPath, nil] withRowAnimation:UITableViewRowAnimationAutomatic];
                    };
                }
 
            };
            return cell;
        }
        else if ((sec==5 && row==0) && self.info.internalagenttype==1)
        {
            static NSString *identifer = @"ShotStepCellE";
            ShotStepCellE *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
            if(!cell)
            {
                cell = [[ShotStepCellE alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                cell.backgroundColor=[UIColor whiteColor];
            }
            [cell reloadUIWithModel:model];
            cell.BeginEdit = ^{
            };
            cell.showDetialPopV = ^{
                DayExplainPopV *popV = [[DayExplainPopV alloc]init];
                [popV show];
            };
            return cell;
        }
        else
        {
            static NSString *identifer = @"PlaceOrderCustomCell";
            PlaceOrderCustomCell *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
            if(!cell)
            {
                cell = [[PlaceOrderCustomCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
                cell.selectionStyle = UITableViewCellSelectionStyleNone;
                cell.backgroundColor=[UIColor whiteColor];
            }
            [cell reloadUIWithModel:model];
            cell.BeginEdit = ^{
            };
            return cell;
        }
    }
    else if ((sec==6&&self.dataSource.count==7) || sec==7)
    {
        static NSString *identifer = @"PlaceAuditCellD";
        PlaceAuditCellD *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[PlaceAuditCellD alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
        }
        [cell reloadUI];
        return cell;
    }
    else if (self.dataSource.count==8&&sec==6)
    {
        static NSString *identifer = @"ShotStepCellD";
        ShotStepCellD *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[ShotStepCellD alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
        }
        WeakSelf(self);
        [cell reloadUIWithModel:self.dataSource[sec][row]];
        cell.textFieldChangeBlock = ^(NSString *text) {
            [weakself recognitionUserWithphone:text];
        };
        cell.BeginEdit = ^{
            weakself.indexPath=indexPath;
        };
        return cell;
    }
    else
    {
        static NSString *identifer = @"UITableViewCell";
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
        if(!cell)
        {
            cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
            cell.backgroundColor=[UIColor whiteColor];
        }
        return cell;
    }
    return nil;
}

-(UIView*)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    if (section==0 || section==3 || section==4) {
        static NSString *identifer = @"PlaceOrderHeadV";
        PlaceOrderHeadV *headerView = [tableView dequeueReusableHeaderFooterViewWithIdentifier:identifer];
        if(!headerView)
        {
            headerView = [[PlaceOrderHeadV alloc] initWithReuseIdentifier:identifer];
            [headerView.backgroundView setBackgroundColor:[UIColor clearColor]];
        }
        NSString *title=@"";
        if (section==0) {
            title = @"拍摄艺人";
        }
        else if (section==3)
        {
            title = @"项目简介";
        }
        else if (section==4)
        {
            title = @"脚本上传";
        }
        [headerView reloadUIWithTitle:title];
        return headerView;
    }
    else
    {
        return nil;
    }
    
}


-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    NSInteger sec= indexPath.section;
    NSInteger row = indexPath.row;
    if (sec==1) {   //
        for (int i =0;i<[self.dataSource[indexPath.section] count]; i++) {
            OrderStructM *model = self.dataSource[indexPath.section][i];
            model.isChoose=NO;
        }
        
        OrderStructM *model = self.dataSource[indexPath.section][indexPath.row];
        model.isChoose=!model.isChoose;
        [self reloadUIWithWay];

    }
    else if (sec==2)
    {
        OrderStructM *model = self.dataSource[indexPath.section][indexPath.row] ;
        OfferTypePopV *popV= [[OfferTypePopV alloc]init];
        WeakSelf(self);
        popV.typeSelectAction = ^(NSString *content,NSInteger advType,NSInteger advSubType) {
            model.content=content;
            weakself.advSubType=advSubType;
            weakself.advType=advType;
            [weakself refreshPrice];
            [tableView reloadRowsAtIndexPaths:[NSArray arrayWithObjects:indexPath, nil] withRowAnimation:UITableViewRowAnimationAutomatic];
        };
        [popV showOfferTypeWithPriceList:self.info.priceList withContent:model.content];
    }
    else if (sec==5)
    {
        OrderStructM *model = self.dataSource[indexPath.section][indexPath.row] ;
        WeakSelf(self);
        if (row==1) {
            NSArray  *array = [NSArray array];  //选中的传入
            if (model.content.length) {
                array=[model.content componentsSeparatedByString:@"、"];
            }
            CitySelectStep1 *step1 = [[CitySelectStep1 alloc]init];
            step1.artistRegin=self.info.region;
            step1.selectedArr=array;
            step1.selectCity = ^(NSString *city) {
                model.content=city;
                [weakself refreshPrice];
                [tableView reloadRowsAtIndexPaths:[NSArray arrayWithObjects:indexPath, nil] withRowAnimation:UITableViewRowAnimationAutomatic];
            };
            [self.navigationController pushViewController:step1 animated:YES];
        }
        else if (row==0||row==3 ||row==4)    //拍摄天数，肖像周期，肖像范围
        {
            OrderPickerPopV *pickerV = [[OrderPickerPopV alloc] init];
            pickerV.title=model.title;
            pickerV.didSelectBlock = ^(NSString *select,NSInteger type) {
                model.content=select;
                model.type=type;
                [weakself refreshPrice];
                [tableView reloadRowsAtIndexPaths:[NSArray arrayWithObjects:indexPath, nil] withRowAnimation:UITableViewRowAnimationAutomatic];
            };
            
            OrderCheckType type=0;
            if (row==0)
            {
                type=OrderCheckTypeDays;
            }
            else if(row==3)
            {
                type=OrderCheckTypePortraitCycle;
            }
            else if (row==4)
            {
                type=OrderCheckTypePortraitRange;
            }
            [pickerV showWithPickerType:type withDesc:model.content];
        }
    }
    else if ((self.dataSource.count==8&&sec==7)||(self.dataSource.count==7&&sec==6) )
    {
        //http://www.idlook.com/public/protocol/html/index.html?num_id=   正式
        //http://www.pre.idlook.com/public/protocol/html/index.html?num_id=  测试
        PublicWebVC * webVC = [[PublicWebVC alloc] initWithTitle:@"保单详情" url:[NSString stringWithFormat:@"http://www.idlook.com/public/protocol/html/index.html?num_id=%@",self.model.policynum]];
        [self.navigationController pushViewController:webVC animated:YES];
    }
}

-(void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    //    [self.view endEditing:YES];
}

-(void)reloadUIWithWay
{
    for (int i =0;i<[self.dataSource[1] count]; i++) {
        OrderStructM *model = self.dataSource[1][i];
        if (model.isChoose==YES) {
            self.showWay=i;
        }
    }
    
    OrderStructM *model = self.dataSource[1][self.showWay];
    [self.bottomV reloadUIWithModel:model withTotalPrice:[NSString stringWithFormat:@"%ld",self.totalPrice] withType:self.showWay];
    [self.tableV reloadData];
}

//根据手机号识别用户
-(void)recognitionUserWithphone:(NSString*)phone
{
    if (IsCorrectPhoneNumber(phone)) {
        NSDictionary *dicArg  = @{@"mobile":phone,
                                  @"userid":[UserInfoManager getUserUID]
                                  };
        [AFWebAPI getIsRegistMoblieWithArg:dicArg callBack:^(BOOL success, id object) {
            if (success) {
                NSDictionary *dic = [object objectForKey:JSON_data];
                if ([dic[@"userid"]integerValue]) {
                    NSString *name = dic[@"name"];
                    
                    if (name.length>0) {
                        NSString *formerStr = [name substringToIndex:1];
                        NSString *CardNumberStr = [NSString stringWithFormat:@"%@***",formerStr];
                        name = CardNumberStr;
                    }
                    
                    NSDictionary *dic2 = @{@"title":@"推荐人姓名",@"placeholder":@"",@"content":name,@"isEdit":@(NO)};
                    OrderStructM *model2 = [[OrderStructM alloc]initWithDic:dic2];
                    
                    OrderStructM *model1 = [self.dataSource[6] firstObject];
                    [self.dataSource replaceObjectAtIndex:6 withObject:@[model1,model2]];
                    [self.tableV reloadData];
                }
            }
            else
            {
                AF_SHOW_RESULT_ERROR
            }
        }];

    }
    else
    {
        if ([self.dataSource[6]count]>1) {
            OrderStructM *model1 = [self.dataSource[6] firstObject];
            [self.dataSource replaceObjectAtIndex:6 withObject:@[model1]];
            [self.tableV reloadData];
            
            ShotStepCellD *cell = [self.tableV cellForRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:6]];
            [cell.textField becomeFirstResponder];
        }
    }
}

#pragma mark -
#pragma mark - TableVTouchDelegate
- (void)tableView:(UITableView *)tableView touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
{
    [self.view endEditing:YES];
}

-(void)touchesBegan:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
    [self.view endEditing:YES];
}

//选择内容后改变价格
-(void)refreshPrice
{
    OrderStructM *model1=self.dataSource[2][0];
    OrderStructM *model2=self.dataSource[5][0];
    OrderStructM *model3=self.dataSource[5][1];
    OrderStructM *model4=self.dataSource[5][3];
    OrderStructM *model5=self.dataSource[5][4];
    
    if (model1.content.length==0) {
        return;
    }
    if (model2.content.length==0) {
        return;
    }
    if (model3.content.length==0) {
        return;
    }
    if (model4.content.length==0) {
        return;
    }
    if (model5.content.length==0) {
        return;
    }
    
    NSInteger shotDay=0;
    if (model2.content.length==2) {
        NSString *strss=[model2.content substringToIndex:1];
        shotDay=[strss integerValue];
    }
 
    NSDictionary *dicArg =@{@"userid":self.info.UID,
                            @"adtype":@(self.advType),
                            @"addetailstype":@(self.advSubType)};
    [AFWebAPI getQuotaDetailWithArg:dicArg callBack:^(BOOL success, id object) {
        if (success) {
            [SVProgressHUD dismiss];
            NSDictionary *dic =[object objectForKey:JSON_data];
            NSArray *array = [dic objectForKey:@"day"];
            
            OrderStructM *model5 = self.dataSource[5][0];
            
            CGFloat dayPrice=0.0 ;
            for (int i=0; i<array.count; i++) {
                NSDictionary *dic = array[i];
                if ([model5.content isEqualToString:dic[@"name"]]) {
                    dayPrice = [dic[@"price"]floatValue];
                }
            }
            self.dayPrice=dayPrice;
            self.dayPriceLsit=array;
            
            CGFloat fixedprice = roundf([self getfixedPriceWithDayPrice:dayPrice]*[self getRatio]);
            NSInteger totalprice = 0;
            
            CGFloat r1 = fixedprice / 100;
            CGFloat r2 = roundf(r1);
            NSInteger fixedprice2 = r2*100;

            totalprice = fixedprice2+shotDay*300;
            self.totalPrice=totalprice;

            CGFloat salePrice =roundf([self getSalePriceWithDay:shotDay]*[self getRatio])+(shotDay)*300;
            self.salePrice=salePrice-totalprice;
            
            OrderStructM *model = self.dataSource[1][self.showWay];
            [self.bottomV reloadUIWithModel:model withTotalPrice:[NSString stringWithFormat:@"%ld",totalprice] withType:self.showWay];
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
    
    
}

#pragma mark---
#pragma 下单
-(void)placeOrderAction
{
    OrderStructM *model = self.dataSource[2][0];
    if (model.content.length==0) {
        [SVProgressHUD showImage:nil status:@"请选择报价类别"];
        return;
    }
    
    NSString *desc = self.dataSource[3][0];
    if (desc.length==0) {

        [SVProgressHUD showImage:nil status:@"请填写项目简介"];
        return;
    }
    
    for (int i=0; i<[self.dataSource[5]count]; i++) {
        OrderStructM *model11= self.dataSource[5][i];
        if (i!=2) {
            if (model11.content.length==0) {
                [SVProgressHUD showImage:nil status:[NSString stringWithFormat:@"请选择%@",model11.title]];
                return;
            }
        }
    }
    
    [self nextStepWithDayPrice:self.dayPrice];
}

-(void)nextStepWithDayPrice:(CGFloat)dayPrice
{
    NSMutableArray *artistArray = [NSMutableArray new];
    for (int i=0;i<[self.dataSource[0]count]; i++) {
        UserInfoM *info =self.dataSource[0][i];
        [artistArray addObject:info.UID];
    }
    NSString *tempString = [artistArray componentsJoinedByString:@","];//分隔符逗号,艺人id
    
    OrderStructM *showModel = self.dataSource[1][self.showWay];  //演出方式
    
    CGFloat singleprice=0;
    for (int i=0; i<self.info.priceList.count; i++) {  //单项报价
        PriceModel *model = [[PriceModel alloc]initWithDic:self.info.priceList[i]];
        if (model.subType==self.advSubType) {
            singleprice= model.price;
        }
    }
    
    NSString *desc = self.dataSource[3][0];
    OrderStructM *model = self.dataSource[2][0];
    
    OrderStructM *model1=self.dataSource[5][0];
    OrderStructM *model2=self.dataSource[5][1];
    OrderStructM *model3=self.dataSource[5][2];
    OrderStructM *model4=self.dataSource[5][3];
    OrderStructM *model5=self.dataSource[5][4];
    
    
    NSInteger shotDay=0;
    if (model1.content.length==2) {
        NSString *strss=[model1.content substringToIndex:1];
        shotDay=[strss integerValue];
    }
    
    CGFloat fixedprice = roundf([self getfixedPriceWithDayPrice:dayPrice]*[self getRatio]);
    CGFloat fixedprofit= roundf([self getfixedPriceWithDayPrice:dayPrice]);
    
    CGFloat totalprice = 0.0;
    CGFloat totalprofit = 0.0;
    
    if (fixedprice>0) {
        totalprice = self.totalPrice+(self.showWay==1?0:[showModel.price integerValue]);
        totalprofit = fixedprofit;
    }
    else
    {
        totalprice=-1;
        totalprofit=-1;
    }

    
    if(model3.content.length==0 || model3.desc.length==0) {
        [SVProgressHUD showImage:nil status:@"请选择拍摄日期"];
        return;
    }
    
    if (self.dayPriceLsit.count<5) {
        [SVProgressHUD showImage:nil status:@"获取价格失败"];
        return;
    }
    NSDictionary *price1Dic = self.dayPriceLsit[0];  //一天报价
    NSDictionary *price2Dic = self.dayPriceLsit[1];  //两天报价
    NSDictionary *price3Dic = self.dayPriceLsit[2];  //三天报价
    NSDictionary *price4Dic = self.dayPriceLsit[3];  //四天报价
    NSDictionary *price5Dic = self.dayPriceLsit[4];  //五天报价
    
    //推荐人电话
    OrderStructM *mobileM =[[OrderStructM alloc]init];
    mobileM.content=@"";
    if (self.dataSource.count==8) {
        mobileM = [self.dataSource[6] firstObject];
    }
    
    [SVProgressHUD showWithStatus:@"正在下单，请稍后." maskType:SVProgressHUDMaskTypeClear];
    NSDictionary *dic = @{@"userid":[UserInfoManager getUserUID],
                          @"artistid":tempString,
                          @"ordertype":self.showWay==1?@(1):@(22),
                          @"quotedprice":@(singleprice),       //该演员广告类别报价
                          @"desc":desc,
                          @"reservationdate":model3.content,   //开始拍摄日期
                          @"reservationdateend":model3.desc,   //截止拍摄日期
                          @"shottype":model.content,
                          @"shootdays":@(shotDay),
                          @"shootplace":model2.content,
                          @"shotcycle":model4.content,
                          @"shotregion":model5.content,
                          @"showprice":[NSString stringWithFormat:@"%ld",self.showWay==0?self.totalPrice:(self.totalPrice-[showModel.price integerValue])],       //演出费
                          @"freeprice":@(self.salePrice),                             //演出费优惠
                          @"ordertypeprice":showModel.price,                                               //预约意向金或者定妆各类型金额
                          @"totalprice":[NSString stringWithFormat:@"%.2f",totalprice],          //总价格
                          @"totalprofit":[NSString stringWithFormat:@"%.2f",totalprofit],        //资源方收到的总价格
                          @"onedayprice":price1Dic[@"price"],       //一天报价
                          @"twodayprice":price2Dic[@"price"],       //两天报价
                          @"threedayprice":price3Dic[@"price"],     //三天报价
                          @"fourdayprice":price4Dic[@"price"],      //四天报价
                          @"fivedayprice":price5Dic[@"price"],      //五天报价
                          @"mobile":mobileM.content
                          };
    
    [AFWebAPI placeOrderShot:dic imageArray:self.photoArray callBack:^(BOOL success, id object) {
        if (success) {
            [SVProgressHUD showSuccessWithStatus:@"下单成功!"];
            OrderModel *model = [[OrderModel alloc]initWithDic:[object objectForKey:JSON_data]];
            PayWaysVC *payVC=[[PayWaysVC alloc]init];
            payVC.orderModel=model;
            WeakSelf(self);
            payVC.refreshData = ^{
                [weakself onGoback];
            };
            [self.navigationController pushViewController:payVC animated:YES];
        }
        else
        {
            AF_SHOW_RESULT_ERROR
        }
    }];
}

#pragma mark--keyboard Noti
- (void)keyboardFrameWillChange:(NSNotification*)notification
{
    CGRect rect = [notification.userInfo[UIKeyboardFrameEndUserInfoKey] CGRectValue];
    
    //当前Cell在屏幕中的坐标值
    CGRect rectInTableView = [self.tableV rectForRowAtIndexPath:self.indexPath];
    CGRect cellRect = [self.tableV convertRect:rectInTableView toView:[self.tableV superview]];
    
    if (rect.origin.y-120-cellRect.origin.y<0) {
        [self.tableV setContentOffset:CGPointMake(0,-rect.origin.y+cellRect.origin.y+120+self.tableV.contentOffset.y) animated:YES];
    }
}

#pragma mark--
#pragma mark---PlaceAuditCellECDelegate
-(void)addVideAction   //才艺作品添加视频
{
    
    TZImagePickerController *imagePickerVc = [[TZImagePickerController alloc] initWithMaxImagesCount:9 columnNumber:4 delegate:self pushPhotoPickerVc:YES];
    // imagePickerVc.navigationBar.translucent = NO;
    imagePickerVc.selectedAssets = self.selectedAssets;
    
#pragma mark - 五类个性化设置，这些参数都可以不传，此时会走默认设置
    imagePickerVc.isSelectOriginalPhoto = YES;
    imagePickerVc.allowTakePicture = NO; // 在内部显示拍照按钮
    imagePickerVc.allowTakeVideo = NO;   // 在内部显示拍视频按
    [imagePickerVc setUiImagePickerControllerSettingBlock:^(UIImagePickerController *imagePickerController) {
        imagePickerController.videoQuality = UIImagePickerControllerQualityTypeHigh;
    }];
    imagePickerVc.iconThemeColor = [UIColor colorWithRed:31 / 255.0 green:185 / 255.0 blue:34 / 255.0 alpha:1.0];
    imagePickerVc.showPhotoCannotSelectLayer = YES;
    imagePickerVc.cannotSelectLayerColor = [[UIColor whiteColor] colorWithAlphaComponent:0.8];
    [imagePickerVc setPhotoPickerPageUIConfigBlock:^(UICollectionView *collectionView, UIView *bottomToolBar, UIButton *previewButton, UIButton *originalPhotoButton, UILabel *originalPhotoLabel, UIButton *doneButton, UIImageView *numberImageView, UILabel *numberLabel, UIView *divideLine) {
        [doneButton setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
    }];
    
    // 3. Set allow picking video & photo & originalPhoto or not
    // 3. 设置是否可以选择视频/图片/原图
    imagePickerVc.allowPickingVideo = NO;
    imagePickerVc.allowPickingImage = YES;
    imagePickerVc.allowPickingOriginalPhoto = NO;
    imagePickerVc.allowPickingGif = NO;
    imagePickerVc.allowPickingMultipleVideo = NO; // 是否可以多选视频
    
    // 4. 照片排列按修改时间升序
    imagePickerVc.sortAscendingByModificationDate = YES;
    imagePickerVc.statusBarStyle = UIStatusBarStyleLightContent;
    
    // 设置是否显示图片序号
    imagePickerVc.showSelectedIndex = NO;
    
    // 设置首选语言 / Set preferred language
    imagePickerVc.preferredLanguage = @"zh-Hans";
    
#pragma mark - 到这里为止
    
    // You can get the photos by block, the same as by delegate.
    // 你可以通过block或者代理，来得到用户选择的照片.
    [imagePickerVc setDidFinishPickingPhotosHandle:^(NSArray<UIImage *> *photos, NSArray *assets, BOOL isSelectOriginalPhoto) {
        [self.photoArray setArray:photos];
        [self.selectedAssets setArray:assets];
        [self.tableV reloadData];
    }];
    [self presentViewController:imagePickerVc animated:YES completion:nil];
}

//删除图片
-(void)delectActionWithRow:(NSInteger)row
{
    if (self.photoArray.count>row) {
        [self.photoArray removeObjectAtIndex:row];
        [self.selectedAssets removeObjectAtIndex:row];
        
        [self.tableV reloadData];
    }
}

//优惠价格
-(CGFloat)getSalePriceWithDay:(NSInteger)day
{
    CGFloat fixedprice=0;  //定角费

    CGFloat singleprice=0;
    for (int i=0; i<self.info.priceList.count; i++) {  //单项报价
        PriceModel *model = [[PriceModel alloc]initWithDic:self.info.priceList[i]];
        if (model.subType==self.advSubType) {
            singleprice= model.price;
        }
    }
    
    CGFloat cityPrice=0;
    CGFloat cyclePrice=0;
    CGFloat regionPrice=0;
    
    OrderStructM *model1 = self.dataSource[5][0];  //天数
    OrderStructM *model2 = self.dataSource[5][1];  //地点
    OrderStructM *model3 = self.dataSource[5][3];  //周期
    OrderStructM *model4 = self.dataSource[5][4];  //范围
    
    NSDictionary *dic = [UserInfoManager getPublicConfig];
    
    //    NSArray *array1 = dic[@"shootdays"];
    NSArray *array2 = dic[@"shootplace"];
    NSArray *array3 = dic[@"shotcycle"];
    NSArray *array4 = dic[@"shotregion"];
    
    NSArray  *cityArray = [NSArray array];  //城市
    if (model2.content.length) {
        cityArray=[model2.content componentsSeparatedByString:@"、"];
    }
    
    for (int i =0; i<cityArray.count; i++) {
        NSString *city = cityArray[i];
        if ([city isEqualToString:self.info.region]) {
            AddPriceModel *model = [[AddPriceModel alloc]initWithDic:array2[0]];
            cityPrice += roundf(singleprice*model.ratio);
        }
        else if ([city isEqualToString:@"香港"] || [city isEqualToString:@"澳门"] || [city isEqualToString:@"台湾"])
        {
            AddPriceModel *model = [[AddPriceModel alloc]initWithDic:array2[2]];
            cityPrice += roundf(singleprice*model.ratio);
        }
        else if ([city isEqualToString:@"海外其他"])
        {
            AddPriceModel *model = [[AddPriceModel alloc]initWithDic:array2[3]];
            cityPrice += roundf(singleprice*model.ratio);
        }
        else
        {
            AddPriceModel *model = [[AddPriceModel alloc]initWithDic:array2[1]];
            cityPrice += roundf(singleprice*model.ratio);
        }
    }
    
    CGFloat ratio1 =0.00;
    for (int i=0; i<array3.count; i++) {
        NSDictionary *dicA = array3[i];
        AddPriceModel *model = [[AddPriceModel alloc]initWithDic:dicA];
        if (i<=model3.type) {
            ratio1+=model.ratio;
        }
    }
    cyclePrice = roundf(singleprice*ratio1);
    
    for (int i=0; i<array4.count; i++) {
        if (model4.type==i) {
            NSDictionary *dicA = array4[i];
            AddPriceModel *model = [[AddPriceModel alloc]initWithDic:dicA];
            regionPrice=(roundf)(singleprice*model.ratio);
        }
    }
    
    fixedprice = singleprice*day + cityPrice + cyclePrice + regionPrice;
    
    if (model1.type==5  || model3.type==5 || model4.type==3) {
        fixedprice=-1;
    }
    return fixedprice;
    
}

//计算定角价格,天数价格
-(CGFloat)getfixedPriceWithDayPrice:(CGFloat)dayPrice
{
    
    CGFloat fixedprice=0;  //定角费
    
    CGFloat singleprice=0;
    for (int i=0; i<self.info.priceList.count; i++) {  //单项报价
        PriceModel *model = [[PriceModel alloc]initWithDic:self.info.priceList[i]];
        if (model.subType==self.advSubType) {
            singleprice= model.price;
        }
    }
    
    CGFloat cityPrice=0;
    CGFloat cyclePrice=0;
    CGFloat regionPrice=0;
    
    OrderStructM *model1 = self.dataSource[5][0];  //天数
    OrderStructM *model2 = self.dataSource[5][1];  //地点
    OrderStructM *model3 = self.dataSource[5][3];  //周期
    OrderStructM *model4 = self.dataSource[5][4];  //范围
    
    NSDictionary *dic = [UserInfoManager getPublicConfig];
    
    //    NSArray *array1 = dic[@"shootdays"];
    NSArray *array2 = dic[@"shootplace"];
    NSArray *array3 = dic[@"shotcycle"];
    NSArray *array4 = dic[@"shotregion"];

    NSArray  *cityArray = [NSArray array];  //城市
    if (model2.content.length) {
        cityArray=[model2.content componentsSeparatedByString:@"、"];
    }
    
    for (int i =0; i<cityArray.count; i++) {
        NSString *city = cityArray[i];
        if ([city isEqualToString:self.info.region]) {
            AddPriceModel *model = [[AddPriceModel alloc]initWithDic:array2[0]];
            cityPrice += roundf(singleprice*model.ratio);
        }
        else if ([city isEqualToString:@"香港"] || [city isEqualToString:@"澳门"] || [city isEqualToString:@"台湾"])
        {
            AddPriceModel *model = [[AddPriceModel alloc]initWithDic:array2[2]];
            cityPrice += roundf(singleprice*model.ratio);
        }
        else if ([city isEqualToString:@"海外其他"])
        {
            AddPriceModel *model = [[AddPriceModel alloc]initWithDic:array2[3]];
            cityPrice += roundf(singleprice*model.ratio);
        }
        else
        {
            AddPriceModel *model = [[AddPriceModel alloc]initWithDic:array2[1]];
            cityPrice += roundf(singleprice*model.ratio);
        }
    }
    
    CGFloat ratio1 =0.00;
    for (int i=0; i<array3.count; i++) {
        NSDictionary *dicA = array3[i];
        AddPriceModel *model = [[AddPriceModel alloc]initWithDic:dicA];
        if (i<=model3.type) {
            ratio1+=model.ratio;
        }
    }
    cyclePrice = roundf(singleprice*ratio1);
    
    for (int i=0; i<array4.count; i++) {
        if (model4.type==i) {
            NSDictionary *dicA = array4[i];
            AddPriceModel *model = [[AddPriceModel alloc]initWithDic:dicA];
            regionPrice=(roundf)(singleprice*model.ratio);
        }
    }
    
    fixedprice = dayPrice + cityPrice + cyclePrice + regionPrice;
    
    if (model1.type==5  || model3.type==5 || model4.type==3) {
        fixedprice=-1;
    }
    return fixedprice;
}

//计算定角系数
-(CGFloat)getRatio
{
    CGFloat singleprice=0;
    for (int i=0; i<self.info.priceList.count; i++) {  //单项报价
        PriceModel *model = [[PriceModel alloc]initWithDic:self.info.priceList[i]];
        if (model.subType==self.advSubType) {
            singleprice= model.price;
        }
    }
    
    return [PlaceOrderModel getRatioWithSinglePrice:singleprice];
}

@end
