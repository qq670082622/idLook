//
//  WorkListVC.m
//  IDLook
//
//  Created by HYH on 2018/5/10.
//  Copyright © 2018年 HYH. All rights reserved.
//

#import "WorkListVC.h"
#import "WorksLisCell.h"
#import "VideoPlayer.h"

@interface WorkListVC ()<UITableViewDelegate,UITableViewDataSource>
{
    VideoPlayer *_player;

}
@property(nonatomic,strong)CustomTableV *tableV;
@property(nonatomic,strong)NSMutableArray *dataSource;
@end

@implementation WorkListVC

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.view.backgroundColor=[UIColor colorWithHexString:@"#F7F7F7"];
    
    [self.navigationItem setTitleView:[CustomNavVC setDefaultNavgationItemTitle:@"视频"]];
    
    [self.navigationItem setLeftBarButtonItem:[[UIBarButtonItem alloc] initWithCustomView:[CustomNavVC getLeftDefaultButtonWithTarget:self action:@selector(onGoback)]]];
    
    self.dataSource=[[NSMutableArray alloc]initWithCapacity:0];
    
    for (int i =0; i<self.array.count; i++) {
        WorksModel *model = [[WorksModel alloc]initWithPastWorkDic:self.array[i]];
        [self.dataSource addObject:model];
    }
    
    [self tableV];
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [_player destroyPlayer];
    _player = nil;
}

-(void)onGoback
{
    [self.navigationController popViewControllerAnimated:YES];
}

-(CustomTableV*)tableV
{
    if (!_tableV) {
        _tableV = [[CustomTableV alloc] initWithFrame:CGRectMake(0,0,UI_SCREEN_WIDTH,UI_SCREEN_HEIGHT) style:UITableViewStyleGrouped];
        _tableV.delegate = self;
        _tableV.dataSource = self;
        _tableV.separatorStyle=UITableViewCellSeparatorStyleNone;
        _tableV.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        [self.view addSubview:_tableV];
        _tableV.estimatedRowHeight = 0;
        _tableV.estimatedSectionHeaderHeight = 0;
        _tableV.estimatedSectionFooterHeight = 0;
        _tableV.backgroundColor=[UIColor clearColor];
    }
    return _tableV;
}


#pragma mark -
#pragma mark - UITableViewDataSource&&UITableViewDelegate

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return .1f;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return .1f;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.dataSource.count;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 220 ;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifer = @"WorksLisCell";
    WorksLisCell *cell = [tableView dequeueReusableCellWithIdentifier:identifer];
    if(!cell)
    {
        cell = [[WorksLisCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifer];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.backgroundColor=[UIColor clearColor];
        
    }
    [cell reloadUIWithModel:self.dataSource[indexPath.row]];
    return cell;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    [self showVideoPlayer:indexPath];
}

- (void)showVideoPlayer:(NSIndexPath *)indexPath
{
    [_player destroyPlayer];
    _player = nil;
    
    WorksLisCell *cell = [self.tableV cellForRowAtIndexPath:indexPath];
    
    _player = [[VideoPlayer alloc] init];
    _player.layer.masksToBounds=YES;
    _player.layer.cornerRadius=5.0;
    
    WorksModel *model =self.dataSource[indexPath.row];
    _player.videoUrl =model.url;
    
    [_player playerBindTableView:self.tableV currentIndexPath:indexPath];
    _player.frame = CGRectMake(15,15, cell.contentView.bounds.size.width-30, cell.contentView.bounds.size.height-20);
    
    [cell.contentView addSubview:_player];
    
    _player.completedPlayingBlock = ^(VideoPlayer *player) {
        [player destroyPlayer];
        _player = nil;
    };
}

@end
